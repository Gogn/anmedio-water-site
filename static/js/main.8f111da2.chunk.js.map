{"version":3,"sources":["Components/UI/Input/Input.module.css","Components/UI/Button/Button.module.css","Components/Forms/Select/Date/forward.svg","Components/Forms/Select/Date/back.svg","Components/Forms/Promo/logo.svg.js","Components/Forms/Promo/Promo.js","store/appContext.js","Components/UI/Input/Input.js","Components/Forms/Contact/Contact.js","Components/Forms/Select/Bill/Bill.js","Components/UI/Button/Button.js","Components/Forms/Select/Water/bigBottle.svg.js","Components/Forms/Select/Water/smallBottles.svg.js","Components/Forms/Select/Water/back.svg","Components/Forms/Select/Water/Back.js","Components/Forms/Select/Water/Water.js","Components/Forms/Select/Date/Date.js","Pages/Order.js","Pages/ok.svg","Components/Forms/Order/OrderList.js","Pages/OrderFinish.js","App.js","serviceWorker.js","store/appReducer.js","store/types.js","index.js","store/appState.js"],"names":["module","exports","Logo","props","fill","cx","cy","r","id","maskUnits","mask","d","className","width","height","AppContext","createContext","isInvalid","valid","touched","shouldValidate","Input","inputType","type","cls","classes","push","invalid","join","index","value","str","match","replace","formatPhoneNumber","onChange","placeholder","label","errorMessage","Contact","useContext","setContact","contact","setAgree","onChangeHandler","event","controlName","formControls","control","target","validation","isValid","required","trim","email","is","minLength","length","phone","nanpPhone","validateControl","isFormValid","Object","keys","forEach","name","onSubmit","preventDefault","console","log","map","key","htmlFor","href","Bill","order","style","marginBottom","bigBottles","smallBottles1","smallBottles2","Button","mobileStep","setMobileStep","history","useHistory","class","onClick","to","disabled","text","BigBottle","viewBox","xmlns","filter","x","y","rx","mask-type","stroke","select","colorInterpolationFilters","filterUnits","floodOpacity","result","in","values","dy","stdDeviation","in2","fontFamily","fontWeight","fontSize","capacity","amount","price","SmallBottles","_extends","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","fillRule","clipRule","_ref","svgRef","title","ref","ForwardRef","forwardRef","Back","deviceType","Water","useState","choise","setChoise","setBigBottles","setSmallBottles1","setSmallBottles2","addBottlesHandler","Select","marginRight","DatePicker","week","j","today","Date","dates","date","setDate","getDate","days","setDays","timeIntervalsWeekday","timeIntervalsHoliday","action","display","daysLocal","concat","first","pop","m","moment","subtract","toDate","prevDate","src","back","alt","dateFull","day","getDay","shift","add","nextDate","forward","workTimes","Times","time","DayButton","isActive","backgroundColor","color","TimeButton","setTime","Order","agree","dispatchData","OrderList","locale","items","Items","item","React","cloneElement","format","address","OrderFinish","orderAgain","lineHeight","marginTop","withRouter","routes","path","exact","component","Boolean","window","location","hostname","handlers","state","payload","appReducer","DEFAULT","app","children","initialState","innerWidth","innerHeight","useReducer","dispatch","isAuthenticated","Provider","setDevice","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,QAAU,yB,iBCAzDD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,QAAQ,wB,wBCDtFD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,+OCwE5BC,G,MAtEF,SAAAC,GAAK,OAChB,uCAAKC,KAAK,QAAWD,GACnB,4BAAQE,GAAI,GAAIC,GAAI,GAAIC,EAAG,GAAIH,KAAK,YACpC,0BACEI,GAAG,YACHC,UAAU,kBAMV,4BAAQJ,GAAI,GAAIC,GAAI,GAAIC,EAAG,GAAIH,KAAK,aAEtC,uBAAGM,KAAK,mBACN,0BACEC,EAAE,sUACFP,KAAK,YAEP,0BACEO,EAAE,sIACFP,KAAK,YAEP,0BACEO,EAAE,kyBACFP,KAAK,SAEP,0BACEO,EAAE,wWACFP,KAAK,YAEP,0BACEO,EAAE,0PACFP,KAAK,YAEP,0BACEO,EAAE,6PACFP,KAAK,YAEP,0BACEO,EAAE,gEACFP,KAAK,YAEP,0BACEO,EAAE,uLACFP,KAAK,YAEP,0BACEO,EAAE,oEACFP,KAAK,YAEP,0BACEO,EAAE,iIACFP,KAAK,SAEP,0BACEO,EAAE,4oDACFP,KAAK,YAEP,0BACEO,EAAE,q/DACFP,KAAK,SAEP,0BACEO,EAAE,yQACFP,KAAK,gBC9DE,aACb,OACE,oCACE,yBAAKQ,UAAU,QACb,kBAAC,EAAD,CAAMC,MAAM,MAAMC,OAAO,QACzB,8FAEF,yBAAKF,UAAU,SACb,myBCVKG,EAAaC,0B,gCCC1B,SAASC,EAAT,GAAsD,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,eAClC,OAAQF,GAASE,GAAkBD,EAGrC,IA+CeE,EA/CD,SAAAlB,GAEZ,IAAMmB,EAAYnB,EAAMoB,MAAQ,OAC1BC,EAAM,CAACC,IAAQJ,OAEjBJ,EAAUd,IACZqB,EAAIE,KAAKD,IAAQE,SAqBnB,OACE,yBAAKf,UAAWY,EAAII,KAAK,MACvB,2BACEL,KAAMD,EACNd,GAAIL,EAAM0B,MACVC,MAAsB,UAAf3B,EAAMoB,KAvBO,SAACQ,GAEzB,IAGIC,GAHW,GAAKD,GAAKE,QAAQ,MAAO,IAGpBD,MAAM,wCAE1B,OAAIA,EAIK,CADSA,EAAM,GAAN,WAAeA,EAAM,GAArB,KAA6B,GAC3B,IAAKA,EAAM,GAAI,KAAMA,EAAM,GAAI,IAAKA,EAAM,GAAI,IAAKA,EAAM,IAAIJ,KAAK,IAGjFG,EAAIC,MAAM,yBAAwB,GAChCD,EAQ6BG,CAAkB/B,EAAM2B,OAAS3B,EAAM2B,MACvEK,SAAUhC,EAAMgC,SAChBC,YAAajC,EAAMkC,QAInBpB,EAAUd,GACN,2BAAIA,EAAMmC,cAAgB,oIAC1B,O,iBCxCCC,EAAU,WAAO,IAAD,EACaC,qBAAWzB,GAA5C0B,EADoB,EACpBA,WAAYC,EADQ,EACRA,QAASC,EADD,EACCA,SA8BvBC,EAAkB,SAACC,EAAOC,GAC7B,IAAMC,EAAY,eAAOL,GACnBM,EAAO,eAAOD,EAAaD,IAEjCE,EAAQlB,MAAQe,EAAMI,OAAOnB,MAC7BkB,EAAQ7B,SAAU,EAClB6B,EAAQ9B,MA3Bc,SAACY,EAAOoB,GAC9B,IAAKA,EAAY,OAAO,EAExB,IAAIC,GAAU,EAed,OAdID,EAAWE,WACbD,EAA2B,KAAjBrB,EAAMuB,QAAiBF,GAG/BD,EAAWI,QACbH,EAAUI,IAAGD,MAAMxB,IAAUqB,GAE3BD,EAAWM,YACbL,EAAUrB,EAAM2B,QAAUP,EAAWM,WAAaL,GAEhDD,EAAWQ,QACbP,EAAUI,IAAGI,UAAU7B,IAAUqB,GAG5BA,EASSS,CAAgBZ,EAAQlB,MAAOkB,EAAQE,YACvDH,EAAaD,GAAeE,EAE5B,IAAIa,GAAc,EAClBC,OAAOC,KAAKhB,GAAciB,SAAQ,SAAAC,GAChCJ,EAAcd,EAAakB,GAAM/C,OAAS2C,KAG7CpB,EAAWM,IAuBZ,OACE,6BACE,0BAAMmB,SAlEY,SAACrB,GACrBA,EAAMsB,iBACN1B,IACA2B,QAAQC,IAAIxB,EAAMI,OAAOnB,SAiErB,yBAAKlB,UAAU,wCACb,yBAAKA,UAAU,QAxBdkD,OAAOC,KAAKrB,GAAS4B,KAAI,SAACxB,EAAajB,GAC5C,IAAMmB,EAAUN,EAAQI,GACxB,OACE,kBAAC,EAAD,CACEyB,IAAKzB,EAAcjB,EACnBN,KAAMyB,EAAQzB,KACdO,MAAOkB,EAAQlB,MACfZ,MAAO8B,EAAQ9B,MACfC,QAAS6B,EAAQ7B,QACjBkB,MAAOW,EAAQX,MACfC,aAAcU,EAAQV,aACtBlB,iBAAkB4B,EAAQE,WAC1Bf,SAAU,SAAAU,GAAK,OAAID,EAAgBC,EAAOC,IAC1CtC,GAAIqB,QAcJ,2BAAON,KAAK,WAAW6B,UAAQ,EAAC5C,GAAG,gBAC5B2B,SAAUQ,IAEjB,2BAAO6B,QAAQ,gBAAgB5D,UAAU,8BACxC,uBAAGA,UAAU,eAAb,wEADD,OAEE,uBAAG6D,KAAK,oBAAR,6KCpFCC,G,MAAO,WAAO,IAClBC,EAASnC,qBAAWzB,GAApB4D,MAIP,OACE,yBAAK/D,UAAU,QACb,yBAAKA,UAAU,2CACf,wBAAIgE,MAAO,CAACC,aAAc,SAA1B,kCACE,wBAAIjE,UAAU,UACW,IAAnB+D,EAAMG,WAA2C,IAAtBH,EAAMI,cAA8C,IAAtBJ,EAAMK,cACnE,8CAGJ,gC,iBCbOC,EAAS,SAAC9E,GAAW,IAAD,EACKqC,qBAAWzB,GAAxCmE,EADwB,EACxBA,WAAYC,EADY,EACZA,cACbC,EAAUC,cAEV7D,EAAM,CACVC,IAAQwD,OACRxD,IAAQtB,EAAMmF,QAgBhB,OACE,4BACEC,QAfgB,WAClB,OAAQpF,EAAMoB,MACZ,IAAK,aACH6D,EAAQ1D,KAAKvB,EAAMqF,IACnB,MACF,IAAK,aACHL,EAAcD,EAAW,IAIR,IAArB/E,EAAMkF,YAAuBD,EAAQ1D,KAAKvB,EAAMqF,KAM9C5E,UAAWY,EAAII,KAAK,KACpB6D,SAAUtF,EAAMsF,UAEftF,EAAMuF,O,QCwDEC,G,YAvFG,SAAAxF,GAAK,OACrB,yBAAKU,MAAM,KAAKC,OAAO,MAAM8E,QAAQ,eAAexF,KAAK,OACpDyF,MAAM,8BACT,uBAAGC,OAAO,mBACR,0BAAMC,EAAE,KAAKC,EAAE,KAAKnF,MAAM,KAAKC,OAAO,MAAMmF,GAAG,IAAI7F,KAAK,UAE1D,0BAAMI,GAAG,QAAQ0F,YAAU,QAAQzF,UAAU,iBAAiBsF,EAAE,KAAKC,EAAE,KAAKnF,MAAM,KAAKC,OAAO,OAC5F,0BAAMiF,EAAE,OAAOC,EAAE,OAAOnF,MAAM,KAAKC,OAAO,MAAMmF,GAAG,MAAM7F,KAAK,UAAU+F,OAAO,aAEjF,uBAAGzF,KAAK,eACN,4BAAQL,GAAG,MAAMC,GAAG,KAAKC,EAAE,IAAIH,KAAMD,EAAMiG,SAC3C,0BACEzF,EAAE,sVACFP,KAAK,YACP,0BACEO,EAAE,qXACFP,KAAK,YACP,0BACEO,EAAE,+IACFP,KAAK,YACP,0BACEO,EAAE,gcACFP,KAAK,UACP,0BACEO,EAAE,iOACFP,KAAK,YACP,0BACEO,EAAE,qOACFP,KAAK,YACP,0BACEO,EAAE,kOACFP,KAAK,YACP,0BACEO,EAAE,oPACFP,KAAK,aAET,8BACE,4BACEI,GAAG,YACHK,MAAM,MACNC,OAAO,MACPiF,EAAE,IACFC,EAAE,IACFK,0BAA0B,OAC1BC,YAAY,kBAEZ,6BAASC,aAAa,IAAIC,OAAO,uBACjC,mCACEC,GAAG,cACHC,OAAO,8CAET,8BAAUC,GAAG,MACb,oCAAgBC,aAAa,OAC7B,mCAAeF,OAAO,+CACtB,6BACEG,IAAI,qBACJL,OAAO,uBAET,6BACEC,GAAG,gBACHI,IAAI,qBACJL,OAAO,YAcb,0BAAMpG,KAAK,UAAU0G,WAAW,WAAWC,WAAW,MAAMC,SAAS,OAAOjB,EAAE,UAAUC,EAAE,UACpFxF,GAAG,YAAYL,EAAM8G,SAD3B,WAGA,0BAAM7G,KAAK,UAAU0G,WAAW,WAAWC,WAAW,MAAMC,SAAS,OAAOjB,EAAE,UAAUC,EAAE,UACpFxF,GAAG,YAAYL,EAAM+G,OAD3B,iBAGA,0BAAM9G,KAAK,OAAO0G,WAAW,WAAWC,WAAW,MAAMC,SAAS,OAAOjB,EAAE,UAAUC,EAAE,UACjFxF,GAAG,YAAYL,EAAMgH,MAD3B,cC4WWC,EA7bM,SAAAjH,GAAK,OACxB,yBAAKU,MAAM,KAAKC,OAAO,MAAM8E,QAAQ,eAAexF,KAAK,OACpDyF,MAAM,8BACT,uBAAGC,OAAO,mBACR,0BAAMC,EAAE,KAAKC,EAAE,KAAKnF,MAAM,KAAKC,OAAO,MAAMmF,GAAG,IAAI7F,KAAK,WAE1D,0BAAMI,GAAG,QAAQ0F,YAAU,QAAQzF,UAAU,iBAAiBsF,EAAE,KAAKC,EAAE,KAAKnF,MAAM,KAAKC,OAAO,OAC5F,0BAAMiF,EAAE,OAAOC,EAAE,OAAOnF,MAAM,KAAKC,OAAO,MAAMmF,GAAG,MAAM7F,KAAK,UAAU+F,OAAO,aAEjF,uBAAGzF,KAAK,eACN,4BAAQL,GAAG,MAAMC,GAAG,KAAKC,EAAE,IAAIH,KAAMD,EAAMiG,SAC3C,0BACEzF,EAAE,sVACFP,KAAK,YACP,0BACEO,EAAE,sVACFP,KAAK,YACP,0BACEO,EAAE,8PACFP,KAAK,UACP,0BACEO,EAAE,wPACFP,KAAK,UACP,0BACEO,EAAE,gJACFP,KAAK,UACP,0BACEO,EAAE,oJACFP,KAAK,UACP,0BACEO,EAAE,gYACFP,KAAK,YACP,0BACEO,EAAE,yRACFP,KAAK,UACP,0BACEO,EAAE,mRACFP,KAAK,UACP,0BACEO,EAAE,6IACFP,KAAK,UACP,0BACEO,EAAE,iJACFP,KAAK,UACP,0BACEO,EAAE,s0CACFP,KAAK,YACP,0BACEO,EAAE,6hBACFP,KAAK,UACP,0BACEO,EAAE,oUACFP,KAAK,UACP,0BAAMO,EAAE,oDAAoDP,KAAK,YACjE,0BAAMO,EAAE,mDAAmDP,KAAK,YAChE,0BACEO,EAAE,gNACFP,KAAK,UACP,0BACEO,EAAE,mNACFP,KAAK,UACP,0BACEO,EAAE,6nEACFP,KAAK,YACP,0BACEO,EAAE,yQACFP,KAAK,YACP,0BACEO,EAAE,wMACFP,KAAK,YACP,0BACEO,EAAE,4MACFP,KAAK,YACP,0BACEO,EAAE,sVACFP,KAAK,YACP,0BACEO,EAAE,8PACFP,KAAK,UACP,0BACEO,EAAE,wPACFP,KAAK,UACP,0BACEO,EAAE,8RACFP,KAAK,UACP,0BACEO,EAAE,gJACFP,KAAK,UACP,0BACEO,EAAE,oJACFP,KAAK,UACP,0BACEO,EAAE,oJACFP,KAAK,UACP,0BACEO,EAAE,iYACFP,KAAK,YACP,0BACEO,EAAE,yRACFP,KAAK,UACP,0BACEO,EAAE,mRACFP,KAAK,UACP,0BACEO,EAAE,yUACFP,KAAK,UACP,0BACEO,EAAE,6IACFP,KAAK,UACP,0BACEO,EAAE,iJACFP,KAAK,UACP,0BACEO,EAAE,iJACFP,KAAK,UACP,0BACEO,EAAE,q0CACFP,KAAK,YACP,0BACEO,EAAE,uiBACFP,KAAK,UACP,0BACEO,EAAE,6hBACFP,KAAK,UACP,0BACEO,EAAE,oUACFP,KAAK,UACP,0BAAMO,EAAE,oDAAoDP,KAAK,YACjE,0BAAMO,EAAE,mDAAmDP,KAAK,YAChE,0BACEO,EAAE,gNACFP,KAAK,UACP,0BACEO,EAAE,mNACFP,KAAK,UACP,0BACEO,EAAE,oNACFP,KAAK,UACP,0BACEO,EAAE,moEACFP,KAAK,YACP,0BACEO,EAAE,wlBACFP,KAAK,YACP,0BACEO,EAAE,yQACFP,KAAK,YACP,0BACEO,EAAE,0MACFP,KAAK,YACP,0BACEO,EAAE,8MACFP,KAAK,YACP,0BACEO,EAAE,+MACFP,KAAK,YACP,0BACEO,EAAE,8VACFP,KAAK,YACP,0BACEO,EAAE,oQACFP,KAAK,UACP,0BACEO,EAAE,8PACFP,KAAK,UACP,0BACEO,EAAE,sSACFP,KAAK,UACP,0BACEO,EAAE,gJACFP,KAAK,UACP,0BACEO,EAAE,oJACFP,KAAK,UACP,0BACEO,EAAE,oJACFP,KAAK,UACP,0BACEO,EAAE,mYACFP,KAAK,YACP,0BACEO,EAAE,4RACFP,KAAK,UACP,0BACEO,EAAE,sRACFP,KAAK,UACP,0BACEO,EAAE,2UACFP,KAAK,UACP,0BACEO,EAAE,gJACFP,KAAK,UACP,0BACEO,EAAE,oJACFP,KAAK,UACP,0BACEO,EAAE,oJACFP,KAAK,UACP,0BACEO,EAAE,m2CACFP,KAAK,YACP,0BACEO,EAAE,uiBACFP,KAAK,UACP,0BACEO,EAAE,6hBACFP,KAAK,UACP,0BACEO,EAAE,kUACFP,KAAK,UACP,0BAAMO,EAAE,oDAAoDP,KAAK,YACjE,0BAAMO,EAAE,oDAAoDP,KAAK,YACjE,0BACEO,EAAE,8MACFP,KAAK,UACP,0BACEO,EAAE,iNACFP,KAAK,UACP,0BACEO,EAAE,kNACFP,KAAK,UACP,0BACEO,EAAE,ypEACFP,KAAK,YACP,0BACEO,EAAE,wlBACFP,KAAK,YACP,0BACEO,EAAE,yQACFP,KAAK,YACP,0BACEO,EAAE,kNACFP,KAAK,YACP,0BACEO,EAAE,sNACFP,KAAK,YACP,0BACEO,EAAE,uNACFP,KAAK,YACP,0BACEO,EAAE,8VACFP,KAAK,YACP,0BACEO,EAAE,oQACFP,KAAK,UACP,0BACEO,EAAE,8PACFP,KAAK,UACP,0BACEO,EAAE,sSACFP,KAAK,UACP,0BACEO,EAAE,gJACFP,KAAK,UACP,0BACEO,EAAE,oJACFP,KAAK,UACP,0BACEO,EAAE,oJACFP,KAAK,UACP,0BACEO,EAAE,mYACFP,KAAK,YACP,0BACEO,EAAE,4RACFP,KAAK,UACP,0BACEO,EAAE,sRACFP,KAAK,UACP,0BACEO,EAAE,2UACFP,KAAK,UACP,0BACEO,EAAE,gJACFP,KAAK,UACP,0BACEO,EAAE,oJACFP,KAAK,UACP,0BACEO,EAAE,oJACFP,KAAK,UACP,0BACEO,EAAE,m2CACFP,KAAK,YACP,0BACEO,EAAE,6hBACFP,KAAK,UACP,0BACEO,EAAE,kUACFP,KAAK,UACP,0BAAMO,EAAE,oDAAoDP,KAAK,YACjE,0BAAMO,EAAE,oDAAoDP,KAAK,YACjE,0BACEO,EAAE,8MACFP,KAAK,UACP,0BACEO,EAAE,iNACFP,KAAK,UACP,0BACEO,EAAE,kNACFP,KAAK,UACP,0BACEO,EAAE,ypEACFP,KAAK,YACP,0BACEO,EAAE,kNACFP,KAAK,YACP,0BACEO,EAAE,sNACFP,KAAK,YACP,0BACEO,EAAE,uNACFP,KAAK,YACP,0BACEO,EAAE,8VACFP,KAAK,YACP,0BACEO,EAAE,oQACFP,KAAK,UACP,0BACEO,EAAE,8PACFP,KAAK,UACP,0BACEO,EAAE,sSACFP,KAAK,UACP,0BACEO,EAAE,gJACFP,KAAK,UACP,0BACEO,EAAE,oJACFP,KAAK,UACP,0BACEO,EAAE,oJACFP,KAAK,UACP,0BACEO,EAAE,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","file":"static/js/main.8f111da2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3cBI6\",\"invalid\":\"Input_invalid__10T1o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1ouAX\",\"blue\":\"Button_blue__3wtMF\",\"mt-30\":\"Button_mt-30__1Lbws\"};","module.exports = __webpack_public_path__ + \"static/media/forward.76c7cfbb.svg\";","module.exports = __webpack_public_path__ + \"static/media/back.5a376dfa.svg\";","import React from \"react\";\n\nconst Logo = props => (\n  <svg fill=\"none\" {...props}>\n    <circle cx={65} cy={65} r={65} fill=\"#FAE1BE\" />\n    <mask\n      id=\"prefix__a\"\n      maskUnits=\"userSpaceOnUse\"\n      // x={0}\n      // y={0}\n      // width={130}\n      // height={130}\n    >\n      <circle cx={65} cy={65} r={65} fill=\"#F5F8FF\" />\n    </mask>\n    <g mask=\"url(#prefix__a)\">\n      <path\n        d=\"M81.627 95.67c-.368.052-.582.07-.582.07L60.04 98.715a9.983 9.983 0 01-.555.09c-5.669.803-12.047-.594-12.943-6.924l-6.557-46.284c-1.098-7.748 4.446-13.285 16.039-16.03l-1.516-10.702 9.692-1.373 1.516 10.702c11.9-.583 18.766 3.196 19.864 10.944l6.557 46.284c.481 3.4-.901 6.186-3.994 8.058-2.462 1.49-5.377 2.027-6.516 2.188z\"\n        fill=\"#D6FEFD\"\n      />\n      <path\n        d=\"M40.5 49.23l6.042 42.652c.492 3.474 2.638 5.455 5.407 6.409l36.774-5.21c2.672-1.86 3.863-4.488 3.414-7.658L86.094 42.77 40.5 49.23z\"\n        fill=\"#418DE8\"\n      />\n      <path\n        d=\"M88.029 71.91c.285 1.067.5 2.142.705 3.22.21 1.075.374 2.159.536 3.24a69.69 69.69 0 01.386 3.265c.102 1.092.194 2.185.216 3.288-.287-1.066-.502-2.141-.706-3.219a68.398 68.398 0 01-.535-3.243 70.837 70.837 0 01-.385-3.262c-.103-1.092-.195-2.185-.217-3.288zM84.412 46.383c.295 1.134.52 2.28.734 3.425.222 1.148.394 2.3.566 3.452.157 1.154.311 2.309.416 3.472.112 1.161.214 2.324.246 3.496-.297-1.135-.522-2.28-.736-3.427a77.571 77.571 0 01-.564-3.451 80.408 80.408 0 01-.415-3.473c-.113-1.16-.215-2.323-.247-3.494zM65.402 30.297a28.672 28.672 0 014.45-.288c1.49.01 2.983.163 4.455.461 1.466.318 2.918.793 4.226 1.555.653.38 1.268.827 1.825 1.333a8.277 8.277 0 011.402 1.743 10.822 10.822 0 00-3.46-2.64c-1.306-.627-2.7-1.066-4.125-1.36-1.425-.307-2.884-.473-4.347-.599-1.466-.116-2.94-.155-4.426-.205z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M65.767 17.361c.067.47-.28.915-.767.984l-11.02 1.561c-.49.07-.945-.261-1.011-.732l-.098-.687c-.067-.474.278-.916.767-.986L64.66 15.94c.488-.07.944.26 1.011.734l.097.687zM93.878 92.287c.125.885-.538 1.72-1.473 1.852l-43.698 6.191c-.937.132-1.805-.485-1.93-1.37l-.564-3.977c-.125-.885.537-1.72 1.474-1.852l43.698-6.19c.935-.133 1.804.484 1.93 1.37l.563 3.976z\"\n        fill=\"#62DAFF\"\n      />\n      <path\n        d=\"M48.478 98.719l-.563-3.977 43.699-6.19.563 3.976-43.699 6.19zM90.338 67.295c.125.887-.538 1.72-1.473 1.853l-43.699 6.19c-.936.134-1.804-.484-1.93-1.37l-.563-3.976c-.126-.886.537-1.72 1.473-1.853l43.7-6.19c.934-.133 1.803.484 1.928 1.37l.564 3.976z\"\n        fill=\"#62DAFF\"\n      />\n      <path\n        d=\"M44.938 73.727l-.563-3.976 43.698-6.19.564 3.975-43.699 6.19zM86.848 42.663c.125.886-.538 1.72-1.473 1.852l-43.699 6.19c-.936.133-1.804-.483-1.93-1.37l-.563-3.973c-.125-.886.537-1.72 1.474-1.852l43.699-6.191c.934-.133 1.803.484 1.929 1.37l.563 3.974z\"\n        fill=\"#62DAFF\"\n      />\n      <path\n        d=\"M41.448 49.095l-.563-3.974 43.699-6.19.563 3.973-43.699 6.19z\"\n        fill=\"#62DAFF\"\n      />\n      <path\n        d=\"M64.73 21.028l-9.747 1.38c-.554.079-.907.718-.803 1.454l.17 1.193c.104.74.62 1.255 1.175 1.177l9.747-1.381c.554-.079.905-.718.8-1.457l-.169-1.192c-.104-.737-.619-1.253-1.173-1.174z\"\n        fill=\"#BBFBFA\"\n      />\n      <path\n        d=\"M113.854 79.124a2.342 2.342 0 104.685 0 2.342 2.342 0 00-4.685 0z\"\n        fill=\"#61C9F8\"\n      />\n      <path\n        d=\"M117.449 78.247c.253.517.147 1.2-.239 1.663-.385.464-1.037.692-1.592.537.563-.052 1.064-.3 1.398-.7.331-.399.485-.938.433-1.5z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M4.444 195.186h120.671v-84.68c.084-2.438.742-5.316.132-15.218-.298-4.838-17.58 5.341-21.987 5.549a1.193 1.193 0 01-.683-.158c-.524-.325-.4-.824-.226-1.232 1.418-3.322 5.447-4.419 8.644-6.097 3.197-1.68 6.037-5.967 3.597-8.629-2.458-2.683-6.906-.245-9.28 2.512-1.631 1.894-3.565 4.114-5.746 4.98-1.632.646-3.2-1.141-2.35-2.676 1.01-1.824 2.82-3.372 4.319-4.92 3.985-4.119 6.405-9.73 6.586-15.47.05-1.596-.912-3.098-2.417-3.632-2.514-.893-4.231 1.52-5.268 3.62C97.158 75.78 94.387 83.208 88.3 87.43c-1.03.715-2.194 1.336-3.448 1.368-1.69.041-3.192-.973-4.689-1.76-7.432-3.905-17.393-2.179-23.078 4-3.447.485-6.363-2.706-7.593-5.963-1.23-3.256-1.507-6.885-3.273-9.886-1.972-3.354-5.128-5.575-8.763-5.662-1.38-.034-2.444 1.228-2.207 2.59a7.845 7.845 0 002.484 4.515c1.952 1.768 2.783 2.437 3.666 4.919 1.052 2.96.829 8.784-3.598 6.394a5.415 5.415 0 01-2.294-2.425c-2.618-5.454-8.165-9.316-14.15-10.013-2.765-.323-5.755.048-7.807 2.118-1.249 1.26-1.858 3.059-1.408 4.774.957 3.653 5.64 4.355 9.356 4.845a44.145 44.145 0 0117.094 6.02c1.2.73 2.439 1.821 3.152 3.024.837 1.41-.614 3.068-2.123 2.426A128.848 128.848 0 004.398 89.35l.046 105.836zM15.514 57.48c-.796-1-1.576-2.3-1.084-3.48.44-1.056 1.82-1.495 2.905-1.136 1.086.358 1.875 1.332 2.319 2.386.444 1.053.6 2.201.814 3.325.41 2.162 1.319 3.8 2.263 5.715-2.77-1.474-5.277-4.37-7.217-6.81zM16.223 64.602c-.678-.468-1.446-.882-2.27-.87-.823.013-1.686.59-1.757 1.41-.072.833.645 1.52 1.376 1.927 1.311.73 2.822.995 4.241 1.483 1.156.396 2.226 1.008 3.035 1.906-.963-2.348-2.53-4.408-4.625-5.856zM11.577 48.805a1.666 1.666 0 103.32-.278 1.666 1.666 0 00-3.32.278zM10.364 60.49a1.198 1.198 0 102.387-.2 1.198 1.198 0 00-2.387.2z\"\n        fill=\"#61C9F8\"\n      />\n      <path\n        d=\"M16.455 53.727c.48-.03.97.16 1.361.452.4.289.717.673.978 1.08.515.816.822 1.775.807 2.73-.251-.916-.596-1.775-1.092-2.55a5.006 5.006 0 00-.859-1.056c-.335-.301-.728-.552-1.195-.656zM12.993 47.752a.769.769 0 01.496-.003 1.06 1.06 0 01.694.707.766.766 0 01-.013.497 1.646 1.646 0 00-.427-.76 1.638 1.638 0 00-.75-.44zM13.246 64.73a2.969 2.969 0 011.33-.082 3.684 3.684 0 012.301 1.338c.284.352.488.767.585 1.199a4.88 4.88 0 00-4.216-2.454zM11.474 59.666c.272-.134.644-.003.82.273.177.275.14.669-.097.859.05-.286.004-.529-.117-.723-.124-.19-.326-.335-.606-.409zM14.742 82.918c-.558-.53-.782-1.376-.688-2.16a3.57 3.57 0 01.335-1.147 3.69 3.69 0 01.714-.972c.567-.577 1.288-.96 2.02-1.242.74-.272 1.506-.431 2.279-.527a11.312 11.312 0 014.604.455c1.473.47 2.847 1.246 3.95 2.294a13.67 13.67 0 00-4.093-1.787 12.67 12.67 0 00-4.385-.292c-.729.078-1.454.228-2.141.458-.688.227-1.338.56-1.875 1.024a3.26 3.26 0 00-1.083 1.79c-.166.697-.074 1.478.363 2.106zM36.854 71.798c.6-.272 1.27-.387 1.937-.382.669.005 1.34.128 1.97.362.632.23 1.222.574 1.734 1.004.511.43.946.954 1.224 1.551a12.114 12.114 0 00-1.532-1.124 9.764 9.764 0 00-3.439-1.27c-.612-.1-1.238-.139-1.894-.14zM61.886 91.337c.473-1.106 1.344-2.023 2.354-2.698 1.021-.671 2.2-1.088 3.41-1.283 1.216-.201 2.45-.134 3.653.044 1.204.188 2.373.517 3.517.892 2.284.768 4.459 1.742 6.734 2.374 1.135.307 2.297.543 3.472.59 1.172.059 2.37-.106 3.452-.623-1.012.655-2.248.903-3.453.953-1.215.033-2.424-.139-3.6-.41-2.361-.544-4.574-1.503-6.818-2.244-1.12-.38-2.256-.702-3.408-.903-1.15-.207-2.327-.283-3.478-.153-1.15.14-2.292.468-3.31 1.044a6.558 6.558 0 00-2.525 2.417zM102.868 68.24c.124-.3.367-.56.669-.718.3-.164.648-.237.997-.232.347.006.705.108 1.012.295.306.182.565.44.767.728.414.576.599 1.282.628 1.972.025.691-.103 1.36-.252 1.998-.328 1.26-.679 2.507-1.168 3.721-.483 1.21-1.102 2.388-1.946 3.378.609-1.146 1.067-2.337 1.45-3.554.376-1.217.697-2.465 1.009-3.705.157-.612.271-1.224.27-1.825a3.296 3.296 0 00-.43-1.698c-.299-.499-.771-.905-1.368-.982-.58-.093-1.258.083-1.638.623z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M125.991 120.196c.012-1.694.012-1.694.002-5.669-.013-5.496-10.648.538-16.744.46-5.672-.072-9.512-.329-16.612-2.973-8.574-3.194-18.802-10.061-28.938-10.685-7.8-.479-18.56 3.434-28.677 5.175-13.752 2.367-19.507-8.135-30.388-4.968L4 196.562l121.456-.628.535-75.738z\"\n        fill=\"#418DE8\"\n      />\n    </g>\n  </svg>\n);\n\nexport default Logo;\n","import React from 'react'\nimport './Promo.css'\nimport Logo from \"./logo.svg.js\";\n\nexport default () => {\n  return (\n    <>\n      <div className='logo'>\n        <Logo width='130' height='130'/>\n        <h1>Чистая Вода</h1>\n      </div>\n      <div className='about'>\n        <p>Питьевая вода, предназначенная для ежедневного потребления, идеально подходит для кулеров. Закажите доставку\n          воды и мы привезем её на дом или в офис.</p>\n      </div>\n    </>\n  )\n}","import {createContext} from 'react'\n\nexport const AppContext = createContext()","import React from 'react'\nimport classes from './Input.module.css'\n\nfunction isInvalid({valid, touched, shouldValidate}) {\n  return !valid && shouldValidate && touched //Если контрол не валидированный и мы должны его валидировать и уже его потрогали - значит, что он невалидный\n}\n\nconst Input = props => {\n\n  const inputType = props.type || 'text'\n  const cls = [classes.Input]\n\n  if (isInvalid(props)) {\n    cls.push(classes.invalid)\n  }\n\n  const formatPhoneNumber = (str) => {\n    //Filter only numbers from the input\n    let cleaned = ('' + str).replace(/\\D/g, '');\n\n    //Check if the input is of correct\n    let match = cleaned.match(/^(\\d|)?(\\d{3})(\\d{3})(\\d{2})(\\d{2})$/);\n\n    if (match) {\n      //Remove the matched extension code\n      //Change this to format for any country code.\n      let intlCode = (match[1] ? `+${match[1]} ` : '')\n      return [intlCode, '(', match[2], ') ', match[3], '-', match[4], '-', match[5]].join('')\n    }\n\n    if ( str.match(/[A-z]|[А-я]/) ) return ''\n    return str;\n  }\n\n  return (\n    <div className={cls.join(' ')}>\n      <input\n        type={inputType}\n        id={props.index}\n        value={props.type === 'phone' ? formatPhoneNumber(props.value) : props.value}\n        onChange={props.onChange}\n        placeholder={props.label}\n      />\n\n      {  //Если в функции тру - показать сообщение об ошибке\n        isInvalid(props)\n          ? <p>{props.errorMessage || 'Введите верное значение'}</p>\n          : null\n      }\n\n    </div>\n  )\n}\n\nexport default Input","import React, {useContext} from 'react'\nimport './Contact.css'\nimport '../../../index.css'\nimport {AppContext} from \"../../../store/appContext\";\nimport Input from \"../../UI/Input/Input\";\nimport is from 'is_js'\n\nexport const Contact = () => {\n  const {setContact, contact, setAgree} = useContext(AppContext)\n\n\n  const submitHandler = (event) => {\n    event.preventDefault()\n    setContact()\n    console.log(event.target.value)\n  }\n\n  const validateControl = (value, validation) => {\n    if (!validation) return true //Если параметры не были переданы - не валидировать\n\n    let isValid = true\n    if (validation.required) {\n      isValid = value.trim() !== '' && isValid //Если в строке что-то сдержится и проверка еще не была зафейлена\n    }\n\n    if (validation.email) {\n      isValid = is.email(value) && isValid\n    }\n    if (validation.minLength) {\n      isValid = value.length >= validation.minLength && isValid\n    }\n    if (validation.phone) {\n      isValid = is.nanpPhone(value) && isValid\n    }\n\n    return isValid\n  }\n\n const onChangeHandler = (event, controlName) => {\n    const formControls = {...contact}\n    const control = {...formControls[controlName]}\n\n    control.value = event.target.value\n    control.touched = true\n    control.valid = validateControl(control.value, control.validation)\n    formControls[controlName] = control //Изменение состояния state после получений новых значений выше\n\n    let isFormValid = true\n    Object.keys(formControls).forEach(name => {\n      isFormValid = formControls[name].valid && isFormValid\n    })\n\n   setContact(formControls)\n  }\n\n  const renderInputs = () => {\n    return Object.keys(contact).map((controlName, index) => {\n      const control = contact[controlName]\n      return (\n        <Input\n          key={controlName + index}\n          type={control.type}\n          value={control.value}\n          valid={control.valid}\n          touched={control.touched}\n          label={control.label}\n          errorMessage={control.errorMessage}\n          shouldValidate={!!control.validation} //Преобразование в булевый тип\n          onChange={event => onChangeHandler(event, controlName)}\n          id={index}\n        />\n      )\n    })\n  }\n\n  return (\n    <div>\n      <form onSubmit={submitHandler}>\n\n        <div className=\"flex flex-row flex-wrap space-around\">\n          <div className=\"item\">\n            {renderInputs()}\n          </div>\n          <input type=\"checkbox\" required id=\"checkbox-data\"\n                 onChange={setAgree}\n          />\n          <label htmlFor=\"checkbox-data\" className=\"checkbox-data text-content\"\n          ><p className=\"text-inline\">Я согласен на</p>&nbsp;\n            <a href=\"/collecting-data\">обработку персональных данных</a>\n          </label>\n\n        </div>\n\n\n      </form>\n    </div>\n  )\n}","import React, {useContext} from 'react'\nimport './Bill.css'\nimport {AppContext} from \"../../../../store/appContext\";\n\nexport const Bill = () => {\n  const {order} = useContext(AppContext)\n\n\n\n  return (\n    <div className='bill'>\n      <div className='flex flex-nowrap flex-row space-between'>\n      <h3 style={{marginBottom: '10px'}}>Итого</h3>\n        <h2 className='normal'>\n          { ((order.bigBottles * 220) + (order.smallBottles1 * 175) + (order.smallBottles2 * 270)) }\n          <span>,00 ₽</span>\n        </h2>\n      </div>\n      <hr/>\n    </div>\n  )\n}","import React, {useContext} from 'react'\nimport classes from './Button.module.css'\nimport { useHistory } from 'react-router-dom';\nimport {AppContext} from \"../../../store/appContext\";\n\nexport const Button = (props) => {\n  const {mobileStep, setMobileStep} = useContext(AppContext)\n  const history = useHistory();\n\n  const cls = [\n    classes.Button,\n    classes[props.class]\n  ]\n\n  const handleClick = () => {\n    switch (props.type) {\n      case 'useHistory' :\n        history.push(props.to)\n        break\n      case 'mobileStep' :\n        setMobileStep(mobileStep+1)\n        break\n      default : break\n    }\n    props.useHistory === true && history.push(props.to)\n  }\n\n  return (\n    <button\n      onClick={handleClick}\n      className={cls.join(' ')}\n      disabled={props.disabled}\n    >\n      {props.text}\n    </button>\n  )\n}","import React from \"react\";\n\nconst BigBottle = props => (\n  <svg width=\"96\" height=\"130\" viewBox=\"30 30 96 130\" fill=\"none\"\n       xmlns=\"http://www.w3.org/2000/svg\">\n    <g filter=\"url(#filter0_d)\">\n      <rect x=\"30\" y=\"30\" width=\"96\" height=\"120\" rx=\"8\" fill=\"#fff\"/>\n    </g>\n    <mask id=\"mask0\" mask-type=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"30\" y=\"26\" width=\"96\" height=\"130\">\n      <rect x=\"30.5\" y=\"26.5\" width=\"95\" height=\"129\" rx=\"7.5\" fill=\"#F5F8FF\" stroke=\"#D5DDE0\"/>\n    </mask>\n    <g mask=\"url(#mask0)\">\n      <circle cx=\"112\" cy=\"40\" r=\"4\" fill={props.select}/>\n      <path\n        d=\"M138.991 107.169C139.003 105.044 139.003 105.044 138.993 100.055C138.98 93.1587 128.345 100.731 122.249 100.634C116.577 100.542 112.737 100.221 105.637 96.9019C97.0627 92.8944 86.8349 84.277 76.6986 83.4945C68.899 82.893 58.1391 87.8037 48.0221 89.9883C34.2705 92.9579 28.5154 79.7797 17.634 83.7538L17 203L138.456 202.212L138.991 107.169Z\"\n        fill=\"#418DE8\"/>\n      <path\n        d=\"M120.269 170C119.862 170 119.627 169.986 119.627 169.986L96.409 169.987C96.407 169.988 96.1777 170 95.7946 170C89.528 170 82.8315 167.506 82.8315 160.51V109.35C82.8315 100.786 89.6888 95.6366 102.673 94.4425V82.6121H113.386V94.4425C126.37 95.6366 133.23 100.786 133.23 109.35V160.51C133.23 164.267 131.305 167.075 127.666 168.629C124.769 169.866 121.528 170 120.269 170Z\"\n        fill=\"#D6FEFD\"/>\n      <path\n        d=\"M82.8315 113.363V160.51C82.8315 164.35 84.8536 166.826 87.7075 168.285H128.355C131.536 166.679 133.23 164.014 133.23 160.51V113.363H82.8315Z\"\n        fill=\"#87E3FF\"/>\n      <path\n        d=\"M112.724 96.672C114.349 96.664 115.976 96.7971 117.589 97.0422C119.202 97.2815 120.797 97.6765 122.346 98.2265C123.886 98.7953 125.386 99.5328 126.687 100.559C127.336 101.072 127.934 101.65 128.459 102.284C128.965 102.935 129.403 103.636 129.712 104.388C128.831 103.021 127.682 101.885 126.368 100.997C125.048 100.116 123.606 99.4266 122.106 98.8895C120.609 98.3376 119.054 97.9346 117.487 97.5733C115.917 97.2219 114.326 96.9539 112.724 96.672Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M115.105 82.7103C115.105 83.2305 114.661 83.6583 114.122 83.6583H101.94C101.399 83.6583 100.958 83.2305 100.958 82.7103V81.951C100.958 81.4269 101.399 81 101.94 81H114.122C114.661 81 115.105 81.4269 115.105 81.951V82.7103Z\"\n        fill=\"#55AAD0\"/>\n      <path\n        d=\"M134.063 140.591C134.063 141.571 133.217 142.373 132.183 142.373H83.8811C82.8457 142.373 82 141.571 82 140.591V136.196C82 135.217 82.8457 134.414 83.8811 134.414H132.183C133.217 134.414 134.063 135.217 134.063 136.196V140.591Z\"\n        fill=\"#55AAD0\"/>\n      <path\n        d=\"M134.063 113.363C134.063 114.343 133.217 115.144 132.183 115.144H83.8811C82.8457 115.144 82 114.343 82 113.363V108.971C82 107.992 82.8457 107.19 83.8811 107.19H132.183C133.217 107.19 134.063 107.992 134.063 108.971V113.363Z\"\n        fill=\"#55AAD0\"/>\n      <path\n        d=\"M113.418 86.5241H102.644C102.032 86.5241 101.551 87.1624 101.551 87.9764V89.2946C101.551 90.1116 102.032 90.7498 102.644 90.7498H113.418C114.031 90.7498 114.509 90.1116 114.509 89.2946V87.9764C114.509 87.1624 114.031 86.5241 113.418 86.5241Z\"\n        fill=\"#BBFBFA\"/>\n    </g>\n    <defs>\n      <filter\n        id=\"filter0_d\"\n        width=\"156\"\n        height=\"190\"\n        x=\"0\"\n        y=\"0\"\n        colorInterpolationFilters=\"sRGB\"\n        filterUnits=\"userSpaceOnUse\"\n      >\n        <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\"/>\n        <feColorMatrix\n          in=\"SourceAlpha\"\n          values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n        />\n        <feOffset dy=\"4\"/>\n        <feGaussianBlur stdDeviation=\"15\"/>\n        <feColorMatrix values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.05 0\"></feColorMatrix>\n        <feBlend\n          in2=\"BackgroundImageFix\"\n          result=\"effect1_dropShadow\"\n        />\n        <feBlend\n          in=\"SourceGraphic\"\n          in2=\"effect1_dropShadow\"\n          result=\"shape\"\n        />\n      </filter>\n    </defs>\n    {/*Дефолтный текст из SVG: */}\n    {/*<path*/}\n    {/*  d=\"M 46.554 43.12 H 47.22 V 55 H 45.312 V 45.37 L 42.9 46.144 L 42.432 44.47 L 46.554 43.12 z M 58.5717 51.904 C 58.5717 52.9 58.1697 53.698 57.3657 54.298 C 56.5737 54.898 55.5417 55.198 54.2697 55.198 C 52.9857 55.198 51.9417 54.898 51.1377 54.298 C 50.3337 53.698 49.9317 52.9 49.9317 51.904 C 49.9317 50.476 50.7897 49.45 52.5057 48.826 C 51.1617 48.094 50.4897 47.14 50.4897 45.964 C 50.4897 45.004 50.8437 44.26 51.5517 43.732 C 52.2717 43.192 53.1777 42.922 54.2697 42.922 C 55.3497 42.922 56.2437 43.192 56.9517 43.732 C 57.6597 44.26 58.0137 45.004 58.0137 45.964 C 58.0137 47.152 57.3417 48.106 55.9977 48.826 C 57.7137 49.462 58.5717 50.488 58.5717 51.904 z M 52.3077 46.036 C 52.3077 46.456 52.4517 46.804 52.7397 47.08 C 53.0397 47.356 53.5437 47.65 54.2517 47.962 C 54.9597 47.662 55.4577 47.374 55.7457 47.098 C 56.0457 46.81 56.1957 46.456 56.1957 46.036 C 56.1957 45.568 56.0157 45.196 55.6557 44.92 C 55.3077 44.632 54.8457 44.488 54.2697 44.488 C 53.6817 44.488 53.2077 44.632 52.8477 44.92 C 52.4877 45.196 52.3077 45.568 52.3077 46.036 z M 56.6457 51.832 C 56.6457 51.316 56.4597 50.902 56.0877 50.59 C 55.7157 50.278 55.1037 49.966 54.2517 49.654 C 53.4117 49.954 52.7997 50.266 52.4157 50.59 C 52.0437 50.914 51.8577 51.328 51.8577 51.832 C 51.8577 52.384 52.0677 52.822 52.4877 53.146 C 52.9197 53.458 53.5137 53.614 54.2697 53.614 C 55.0257 53.614 55.6077 53.458 56.0157 53.146 C 56.4357 52.822 56.6457 52.384 56.6457 51.832 z M 60.8938 58.204 L 61.0738 53.092 H 63.269800000000004 L 62.4238 58.204 H 60.8938 z M 73.4172 47.044 C 73.4172 47.5 73.3452 47.938 73.2012 48.358 C 73.0932 48.694 72.9252 49.06 72.6972 49.456 C 72.5052 49.78 72.1992 50.23 71.7792 50.806 L 68.8272 55 H 66.5592 L 69.4212 50.95 C 69.2652 50.986 69.0912 51.004 68.8992 51.004 C 67.8672 51.004 66.9612 50.62 66.1812 49.852 C 65.4012 49.072 65.0112 48.13 65.0112 47.026 C 65.0112 45.874 65.4252 44.902 66.2532 44.11 C 67.0812 43.318 68.0712 42.922 69.2232 42.922 C 70.3632 42.898 71.3532 43.294 72.1932 44.11 C 73.0332 44.914 73.4412 45.892 73.4172 47.044 z M 70.8612 48.7 C 71.3052 48.256 71.5272 47.698 71.5272 47.026 C 71.5272 46.354 71.3052 45.796 70.8612 45.352 C 70.4052 44.896 69.8592 44.668 69.2232 44.668 C 68.5632 44.668 68.0052 44.896 67.5492 45.352 C 67.1052 45.796 66.8832 46.354 66.8832 47.026 C 66.8832 47.71 67.1052 48.274 67.5492 48.718 C 67.9932 49.162 68.5512 49.384 69.2232 49.384 C 69.8592 49.384 70.4052 49.156 70.8612 48.7 z M 81.354 46.162 H 87.852 V 55 H 85.962 V 47.8 H 83.118 L 83.1 48.682 C 83.04 50.986 82.788 52.636 82.344 53.632 C 81.912 54.616 81.174 55.108 80.13 55.108 C 79.878 55.108 79.65 55.072 79.446 55 V 53.416 C 79.638 53.44 79.758 53.452 79.806 53.452 C 80.334 53.452 80.712 53.056 80.94 52.264 C 81.168 51.472 81.294 50.176 81.318 48.376 L 81.354 46.162 z\"*/}\n    {/*  fill=\"#455273\"/>*/}\n    {/*<path*/}\n    {/*  d=\"M44.53 66.4H44.9V73H43.84V67.65L42.5 68.08L42.24 67.15L44.53 66.4ZM49.4692 73V68.09H50.5192V72.09H52.3392V68.09H53.3892V72.09H55.2092V68.09H56.2592V73H49.4692ZM58.7793 73V69H57.1993V68.09H61.4093V69H59.8293V73H58.7793Z\"*/}\n    {/*  fill=\"#BABDC2\"/>*/}\n    {/*<path*/}\n    {/*  d=\"M44.88 138.896H48.228V140H42.552V139.712L45.372 136.676C45.828 136.196 46.152 135.796 46.344 135.476C46.536 135.156 46.632 134.832 46.632 134.504C46.632 134.096 46.512 133.764 46.272 133.508C46.032 133.244 45.712 133.112 45.312 133.112C44.912 133.112 44.588 133.248 44.34 133.52C44.092 133.792 43.968 134.136 43.968 134.552C43.968 134.696 43.988 134.9 44.028 135.164H42.744C42.688 134.964 42.66 134.736 42.66 134.48C42.66 133.8 42.908 133.208 43.404 132.704C43.9 132.2 44.54 131.948 45.324 131.948C46.076 131.948 46.7 132.184 47.196 132.656C47.7 133.128 47.952 133.712 47.952 134.408C47.952 134.952 47.808 135.444 47.52 135.884C47.264 136.292 46.848 136.804 46.272 137.42L44.88 138.896ZM51.7472 138.896H55.0952V140H49.4192V139.712L52.2392 136.676C52.6952 136.196 53.0192 135.796 53.2112 135.476C53.4032 135.156 53.4992 134.832 53.4992 134.504C53.4992 134.096 53.3792 133.764 53.1392 133.508C52.8992 133.244 52.5792 133.112 52.1792 133.112C51.7792 133.112 51.4552 133.248 51.2072 133.52C50.9592 133.792 50.8352 134.136 50.8352 134.552C50.8352 134.696 50.8552 134.9 50.8952 135.164H49.6112C49.5552 134.964 49.5272 134.736 49.5272 134.48C49.5272 133.8 49.7752 133.208 50.2712 132.704C50.7672 132.2 51.4072 131.948 52.1912 131.948C52.9432 131.948 53.5672 132.184 54.0632 132.656C54.5672 133.128 54.8192 133.712 54.8192 134.408C54.8192 134.952 54.6752 135.444 54.3872 135.884C54.1312 136.292 53.7152 136.804 53.1392 137.42L51.7472 138.896ZM56.4664 135.968C56.4664 134.76 56.7224 133.792 57.2344 133.064C57.7464 132.32 58.4984 131.948 59.4904 131.948C60.4824 131.948 61.2304 132.316 61.7344 133.052C62.2464 133.78 62.5024 134.752 62.5024 135.968C62.5024 137.2 62.2424 138.204 61.7224 138.98C61.2104 139.748 60.4664 140.132 59.4904 140.132C58.5144 140.132 57.7664 139.744 57.2464 138.968C56.7264 138.192 56.4664 137.192 56.4664 135.968ZM61.1824 135.98C61.1824 134.068 60.6184 133.112 59.4904 133.112C58.3544 133.112 57.7864 134.068 57.7864 135.98C57.7864 137.972 58.3544 138.968 59.4904 138.968C60.6184 138.968 61.1824 137.972 61.1824 135.98ZM67.7977 140V138.572H66.8377V137.516H67.7977V136.592H66.8377V135.5H67.7977V132.08H70.6417C71.3857 132.08 71.9857 132.284 72.4417 132.692C72.8977 133.1 73.1257 133.648 73.1257 134.336C73.1257 135.008 72.8937 135.552 72.4297 135.968C71.9737 136.384 71.3777 136.592 70.6417 136.592H69.0697V137.516H72.1777V138.572H69.0697V140H67.7977ZM69.0697 135.5H70.5817C70.9737 135.5 71.2857 135.396 71.5177 135.188C71.7497 134.98 71.8657 134.7 71.8657 134.348C71.8657 133.988 71.7497 133.704 71.5177 133.496C71.2937 133.28 70.9817 133.172 70.5817 133.172H69.0697V135.5Z\"*/}\n    {/*  fill=\"white\"/>*/}\n    <text fill='#455273' fontFamily='Cera Pro' fontWeight='600' fontSize='18px' x=\"40.7829\" y=\"55.6657\"\n          id=\"e1_texte\">{props.capacity} л\n    </text>\n    <text fill='#BABDC2' fontFamily='Cera Pro' fontWeight='600' fontSize='10px' x=\"41.2445\" y=\"73.2472\"\n          id=\"e2_texte\">{props.amount} шт\n    </text>\n    <text fill='#fff' fontFamily='Cera Pro' fontWeight='600' fontSize='12px' x=\"42.1359\" y=\"140.327\"\n          id=\"e3_texte\">{props.price} ₽\n    </text>\n  </svg>\n);\n\nexport default BigBottle;\n","import React from \"react\";\n\nconst SmallBottles = props => (\n  <svg width=\"96\" height=\"130\" viewBox=\"30 30 96 130\" fill=\"none\"\n       xmlns=\"http://www.w3.org/2000/svg\">\n    <g filter=\"url(#filter0_d)\">\n      <rect x=\"30\" y=\"30\" width=\"96\" height=\"120\" rx=\"8\" fill=\"white\"/>\n    </g>\n    <mask id=\"mask0\" mask-type=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"30\" y=\"26\" width=\"96\" height=\"130\">\n      <rect x=\"30.5\" y=\"26.5\" width=\"95\" height=\"129\" rx=\"7.5\" fill=\"#F5F8FF\" stroke=\"#D5DDE0\"/>\n    </mask>\n    <g mask=\"url(#mask0)\">\n      <circle cx=\"112\" cy=\"40\" r=\"4\" fill={props.select}/>\n      <path\n        d=\"M138.991 107.169C139.003 105.044 139.003 105.044 138.993 100.055C138.98 93.1587 128.345 100.731 122.249 100.634C116.577 100.542 112.737 100.221 105.637 96.9019C97.0627 92.8944 86.8349 84.277 76.6986 83.4945C68.899 82.893 58.1391 87.8037 48.0221 89.9883C34.2705 92.9579 28.5154 79.7797 17.634 83.7538L17 203L138.456 202.212L138.991 107.169Z\"\n        fill=\"#418DE8\"/>\n      <path\n        d=\"M85.5857 139.311C85.5857 139.311 85.5857 142.111 85.5857 142.387C85.5857 142.661 84.5181 143.074 83.3699 144.604C82.2227 146.134 82 147.805 82 148.935C82 149.142 82 149.36 82 149.586C82 150.178 82 150.829 82 151.525C82 151.659 82.1154 151.769 82.2544 151.769H88.1824C88.3244 151.769 88.4378 151.659 88.4378 151.523V149.587V139.311H85.5857Z\"\n        fill=\"#D6FEFD\"/>\n      <path\n        d=\"M88.1824 152.075H82.2544C82.1154 152.075 82 152.185 82 152.321C82 152.939 82 153.588 82 154.258C82 154.394 82.1154 154.503 82.2544 154.503H88.1824C88.3244 154.503 88.4378 154.394 88.4378 154.257V152.321C88.4378 152.186 88.3244 152.075 88.1824 152.075Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M88.1824 154.81H82.2544C82.1154 154.81 82 154.92 82 155.054C82 155.685 82 156.334 82 156.993C82 157.127 82.1154 157.237 82.2544 157.237H88.1824C88.3244 157.237 88.4378 157.127 88.4378 156.992V155.054C88.4378 154.92 88.3244 154.81 88.1824 154.81Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M88.1825 154.81C88.3245 154.81 88.4379 154.92 88.4379 155.054V154.257C88.4379 154.394 88.3245 154.503 88.1825 154.503H82.2544V154.81H88.1825Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M88.1825 152.075C88.3245 152.075 88.4379 152.186 88.4379 152.321V151.523C88.4379 151.659 88.3245 151.769 88.1825 151.769H82.2544V152.075H88.1825Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M91.2912 139.311C91.2912 139.311 91.2912 142.111 91.2912 142.387C91.2912 142.661 92.3587 143.074 93.508 144.604C94.6541 146.134 94.8779 147.805 94.8779 148.935C94.8779 149.142 94.8779 149.36 94.8779 149.586C94.8779 150.178 94.8779 150.829 94.8779 151.525C94.8779 151.659 94.7634 151.769 94.6235 151.769H88.6934C88.5544 151.769 88.438 151.659 88.438 151.523V149.587V139.311H91.2912Z\"\n        fill=\"#BDEEED\"/>\n      <path\n        d=\"M88.6934 152.075H94.6235C94.7634 152.075 94.8779 152.185 94.8779 152.321C94.8779 152.939 94.8779 153.588 94.8779 154.258C94.8779 154.394 94.7634 154.503 94.6235 154.503H88.6934C88.5544 154.503 88.438 154.394 88.438 154.257V152.321C88.438 152.186 88.5544 152.075 88.6934 152.075Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M88.6934 154.81H94.6235C94.7634 154.81 94.8779 154.92 94.8779 155.054C94.8779 155.685 94.8779 156.334 94.8779 156.993C94.8779 157.127 94.7634 157.237 94.6235 157.237H88.6934C88.5544 157.237 88.438 157.127 88.438 156.992V155.054C88.438 154.92 88.5544 154.81 88.6934 154.81Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M88.6934 154.81C88.5544 154.81 88.438 154.92 88.438 155.054V154.257C88.438 154.394 88.5544 154.503 88.6934 154.503H94.6235V154.81H88.6934Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M88.6934 152.075C88.5544 152.075 88.438 152.186 88.438 152.321V151.523C88.438 151.659 88.5544 151.769 88.6934 151.769H94.6235V152.075H88.6934Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M82 148.745C82 148.952 82 149.17 82 149.396C82 149.988 82 150.639 82 151.335C82 151.469 82.1154 151.579 82.2544 151.579V151.885C82.1154 151.885 82 151.995 82 152.131C82 152.749 82 153.398 82 154.068C82 154.204 82.1154 154.313 82.2544 154.313V154.62C82.1154 154.62 82 154.73 82 154.864C82 155.495 82 156.144 82 156.803C82 156.937 82.1154 157.047 82.2544 157.047V157.353C82.1154 157.353 82 157.463 82 157.598C82 158.239 82 158.886 82 159.535C82 165.273 82 171.173 82 173.59C82 177.752 83.5303 179.405 85.1883 179.405C86.8463 179.405 86.9729 178.792 88.4378 178.792C89.9048 178.792 90.0335 179.405 91.6905 179.405C93.3464 179.405 94.8777 177.752 94.8777 173.59C94.8777 171.173 94.8777 165.273 94.8777 159.535C94.8777 158.886 94.8777 158.239 94.8777 157.598C94.8777 157.463 94.7633 157.353 94.6233 157.353V157.047C94.7633 157.047 94.8777 156.937 94.8777 156.803C94.8777 156.144 94.8777 155.495 94.8777 154.864C94.8777 154.73 94.7633 154.62 94.6233 154.62V154.313C94.7633 154.313 94.8777 154.204 94.8777 154.068C94.8777 153.398 94.8777 152.749 94.8777 152.131C94.8777 151.995 94.7633 151.885 94.6233 151.885V151.579C94.7633 151.579 94.8777 151.469 94.8777 151.335C94.8777 150.639 94.8777 149.988 94.8777 149.396C94.8777 149.17 94.8777 148.952 94.8777 148.745C94.8777 148.238 94.8276 147.622 94.6734 146.96H82.2053C82.0511 147.622 82 148.238 82 148.745Z\"\n        fill=\"#87E3FF\"/>\n      <path\n        d=\"M89.8489 142.387C89.8969 142.787 90.1043 143.126 90.4077 143.352C90.6968 143.591 91.0564 143.769 91.3914 144C92.0677 144.446 92.6541 145.07 93.0678 145.778C93.4785 146.497 93.7165 147.31 93.7635 148.124C93.8074 148.945 93.7093 149.723 93.6276 150.519C93.5755 150.124 93.552 149.728 93.5142 149.331C93.4907 148.932 93.4734 148.545 93.4059 148.164C93.2782 147.403 93.0474 146.667 92.6622 146.013C92.2853 145.347 91.7704 144.783 91.1759 144.287C90.8848 144.033 90.5425 143.821 90.2514 143.517C89.9674 143.213 89.7876 142.786 89.8489 142.387Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M88.7513 137C88.5796 137 88.2977 137 88.1271 137H85.2657C85.0941 137 84.9531 137.14 84.9531 137.313V139.789C84.9531 139.96 85.0941 140.101 85.2657 140.101H88.1271C88.2977 140.101 88.5796 140.101 88.7513 140.101H91.6126C91.7843 140.101 91.9232 139.96 91.9232 139.789V137.313C91.9232 137.14 91.7843 137 91.6126 137H88.7513Z\"\n        fill=\"white\"/>\n      <path d=\"M88.4379 140.831H84.7256V140.363H88.4379V140.831Z\" fill=\"#276B8A\"/>\n      <path d=\"M92.1524 140.831H88.438V140.363H92.1524V140.831Z\" fill=\"#276B8A\"/>\n      <path\n        d=\"M84.2456 151.715C85.6431 151.532 87.0416 151.49 88.4401 151.482C89.8366 151.489 91.2361 151.531 92.6336 151.715C91.2361 151.901 89.8366 151.943 88.4401 151.95C87.0416 151.942 85.6431 151.9 84.2456 151.715Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M84.2456 154.552C85.6431 154.368 87.0416 154.327 88.4401 154.318C89.8366 154.325 91.2361 154.367 92.6336 154.552C91.2361 154.738 89.8366 154.78 88.4401 154.787C87.0416 154.779 85.6431 154.737 84.2456 154.552Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M91.6906 179.595C90.0337 179.595 89.9049 178.788 88.438 178.788V157.623C88.439 157.623 88.44 157.623 88.44 157.623C89.8365 157.616 91.236 157.574 92.6335 157.389C91.236 157.203 89.8365 157.161 88.44 157.154C88.44 157.154 88.439 157.154 88.438 157.154V154.787C88.439 154.787 88.44 154.787 88.44 154.787C89.8365 154.78 91.236 154.738 92.6335 154.552C91.236 154.367 89.8365 154.325 88.44 154.318C88.44 154.318 88.439 154.318 88.438 154.318V151.95C88.439 151.95 88.44 151.95 88.44 151.95C89.8365 151.943 91.236 151.901 92.6335 151.715C91.236 151.531 89.8365 151.489 88.44 151.482C88.44 151.482 88.439 151.482 88.438 151.482V147.15H93.1637C93.2689 147.479 93.3476 147.819 93.4058 148.164C93.4732 148.545 93.4906 148.932 93.5141 149.331C93.5519 149.728 93.5754 150.124 93.6275 150.519C93.7092 149.723 93.8073 148.945 93.7633 148.124C93.745 147.797 93.6949 147.47 93.6152 147.15H94.6736C94.8278 147.812 94.8779 148.428 94.8779 148.935C94.8779 149.142 94.8779 149.36 94.8779 149.586C94.8779 150.178 94.8779 150.829 94.8779 151.525C94.8779 151.659 94.7634 151.769 94.6235 151.769V152.075C94.7634 152.075 94.8779 152.185 94.8779 152.321C94.8779 152.939 94.8779 153.588 94.8779 154.258C94.8779 154.394 94.7634 154.503 94.6235 154.503V154.81C94.7634 154.81 94.8779 154.92 94.8779 155.054C94.8779 155.685 94.8779 156.334 94.8779 156.993C94.8779 157.127 94.7634 157.237 94.6235 157.237V157.543C94.7634 157.543 94.8779 157.653 94.8779 157.788C94.8779 158.429 94.8779 159.076 94.8779 159.725C94.8779 165.464 94.8779 171.363 94.8779 173.78C94.8779 177.942 93.3466 179.595 91.6906 179.595ZM93.6275 158.794C93.5325 160.491 93.4865 162.187 93.4487 163.885C93.4089 165.581 93.4119 167.279 93.3935 168.976L93.4446 174.066C93.4477 174.9 93.3864 175.744 93.1749 176.55C93.0707 176.953 92.9298 177.349 92.6999 177.695C92.4741 178.032 92.1258 178.325 91.6906 178.344C91.7162 178.347 91.7427 178.347 91.7682 178.347C92.1738 178.347 92.5528 178.089 92.8 177.769C93.0707 177.426 93.2526 177.024 93.3946 176.616C93.6602 175.79 93.7633 174.929 93.8052 174.07C93.8492 172.369 93.843 170.674 93.8624 168.976C93.843 167.279 93.8461 165.581 93.8073 163.885C93.7695 162.187 93.7235 160.491 93.6275 158.794Z\"\n        fill=\"#3F9AC4\"/>\n      <path\n        d=\"M93.6274 150.519C93.5753 150.124 93.5518 149.728 93.514 149.331C93.4905 148.932 93.4731 148.545 93.4057 148.164C93.3475 147.819 93.2688 147.479 93.1636 147.15H93.6151C93.6948 147.47 93.7448 147.797 93.7632 148.124C93.8072 148.945 93.7091 149.723 93.6274 150.519Z\"\n        fill=\"#E2FAFA\"/>\n      <path\n        d=\"M88.44 151.95C88.44 151.95 88.439 151.95 88.438 151.95V151.482C88.439 151.482 88.44 151.482 88.44 151.482C89.8365 151.489 91.236 151.531 92.6335 151.715C91.236 151.901 89.8365 151.943 88.44 151.95Z\"\n        fill=\"#E2FAFA\"/>\n      <path\n        d=\"M88.44 154.787C88.44 154.787 88.439 154.787 88.438 154.787V154.318C88.439 154.318 88.44 154.318 88.44 154.318C89.8365 154.325 91.236 154.367 92.6335 154.552C91.236 154.738 89.8365 154.78 88.44 154.787Z\"\n        fill=\"#E2FAFA\"/>\n      <path\n        d=\"M94.5857 129.311C94.5857 129.311 94.5857 132.111 94.5857 132.387C94.5857 132.661 93.5181 133.074 92.3699 134.604C91.2227 136.134 91 137.805 91 138.935C91 139.142 91 139.36 91 139.586C91 140.178 91 140.829 91 141.525C91 141.659 91.1154 141.769 91.2544 141.769H97.1824C97.3244 141.769 97.4378 141.659 97.4378 141.523V139.587V129.311H94.5857Z\"\n        fill=\"#D6FEFD\"/>\n      <path\n        d=\"M97.1824 142.075H91.2544C91.1154 142.075 91 142.185 91 142.321C91 142.939 91 143.588 91 144.258C91 144.394 91.1154 144.503 91.2544 144.503H97.1824C97.3244 144.503 97.4378 144.394 97.4378 144.257V142.321C97.4378 142.186 97.3244 142.075 97.1824 142.075Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M97.1824 144.81H91.2544C91.1154 144.81 91 144.92 91 145.054C91 145.685 91 146.334 91 146.993C91 147.127 91.1154 147.237 91.2544 147.237H97.1824C97.3244 147.237 97.4378 147.127 97.4378 146.992V145.054C97.4378 144.92 97.3244 144.81 97.1824 144.81Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M97.1824 147.543H91.2544C91.1154 147.543 91 147.653 91 147.788C91 148.429 91 149.076 91 149.725C91 155.464 91 161.363 91 163.78C91 167.942 92.5303 169.595 94.1883 169.595C95.8463 169.595 95.9729 168.982 97.4378 168.982V149.725V147.788C97.4378 147.653 97.3244 147.543 97.1824 147.543Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M97.1825 144.81C97.3245 144.81 97.4379 144.92 97.4379 145.054V144.257C97.4379 144.394 97.3245 144.503 97.1825 144.503H91.2544V144.81H97.1825Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M97.1825 147.543C97.3245 147.543 97.4379 147.653 97.4379 147.788V146.992C97.4379 147.127 97.3245 147.237 97.1825 147.237H91.2544V147.543H97.1825Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M97.1825 142.075C97.3245 142.075 97.4379 142.186 97.4379 142.321V141.523C97.4379 141.659 97.3245 141.769 97.1825 141.769H91.2544V142.075H97.1825Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M100.291 129.311C100.291 129.311 100.291 132.111 100.291 132.387C100.291 132.661 101.359 133.074 102.508 134.604C103.654 136.134 103.878 137.805 103.878 138.935C103.878 139.142 103.878 139.36 103.878 139.586C103.878 140.178 103.878 140.829 103.878 141.525C103.878 141.659 103.763 141.769 103.623 141.769H97.6934C97.5544 141.769 97.438 141.659 97.438 141.523V139.587V129.311H100.291Z\"\n        fill=\"#BDEEED\"/>\n      <path\n        d=\"M97.6934 142.075H103.623C103.763 142.075 103.878 142.185 103.878 142.321C103.878 142.939 103.878 143.588 103.878 144.258C103.878 144.394 103.763 144.503 103.623 144.503H97.6934C97.5544 144.503 97.438 144.394 97.438 144.257V142.321C97.438 142.186 97.5544 142.075 97.6934 142.075Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M97.6934 144.81H103.623C103.763 144.81 103.878 144.92 103.878 145.054C103.878 145.685 103.878 146.334 103.878 146.993C103.878 147.127 103.763 147.237 103.623 147.237H97.6934C97.5544 147.237 97.438 147.127 97.438 146.992V145.054C97.438 144.92 97.5544 144.81 97.6934 144.81Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M97.6934 147.543H103.623C103.763 147.543 103.878 147.653 103.878 147.788C103.878 148.429 103.878 149.076 103.878 149.725C103.878 155.464 103.878 161.363 103.878 163.78C103.878 167.942 102.347 169.595 100.691 169.595C99.0337 169.595 98.9049 168.982 97.438 168.982V149.725V147.788C97.438 147.653 97.5544 147.543 97.6934 147.543Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M97.6934 144.81C97.5544 144.81 97.438 144.92 97.438 145.054V144.257C97.438 144.394 97.5544 144.503 97.6934 144.503H103.623V144.81H97.6934Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M97.6934 147.543C97.5544 147.543 97.438 147.653 97.438 147.788V146.992C97.438 147.127 97.5544 147.237 97.6934 147.237H103.623V147.543H97.6934Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M97.6934 142.075C97.5544 142.075 97.438 142.186 97.438 142.321V141.523C97.438 141.659 97.5544 141.769 97.6934 141.769H103.623V142.075H97.6934Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M91 138.745C91 138.952 91 139.17 91 139.396C91 139.988 91 140.639 91 141.335C91 141.469 91.1154 141.579 91.2544 141.579V141.885C91.1154 141.885 91 141.995 91 142.131C91 142.749 91 143.398 91 144.068C91 144.204 91.1154 144.313 91.2544 144.313V144.62C91.1154 144.62 91 144.73 91 144.864C91 145.495 91 146.144 91 146.803C91 146.937 91.1154 147.047 91.2544 147.047V147.353C91.1154 147.353 91 147.463 91 147.598C91 148.239 91 148.886 91 149.535C91 155.273 91 161.173 91 163.59C91 167.752 92.5303 169.405 94.1883 169.405C95.8463 169.405 95.9729 168.792 97.4378 168.792C98.9048 168.792 99.0335 169.405 100.69 169.405C102.346 169.405 103.878 167.752 103.878 163.59C103.878 161.173 103.878 155.273 103.878 149.535C103.878 148.886 103.878 148.239 103.878 147.598C103.878 147.463 103.763 147.353 103.623 147.353V147.047C103.763 147.047 103.878 146.937 103.878 146.803C103.878 146.144 103.878 145.495 103.878 144.864C103.878 144.73 103.763 144.62 103.623 144.62V144.313C103.763 144.313 103.878 144.204 103.878 144.068C103.878 143.398 103.878 142.749 103.878 142.131C103.878 141.995 103.763 141.885 103.623 141.885V141.579C103.763 141.579 103.878 141.469 103.878 141.335C103.878 140.639 103.878 139.988 103.878 139.396C103.878 139.17 103.878 138.952 103.878 138.745C103.878 138.238 103.828 137.622 103.673 136.96H91.2053C91.0511 137.622 91 138.238 91 138.745Z\"\n        fill=\"#87E3FF\"/>\n      <path\n        d=\"M102.627 148.794C102.723 150.491 102.769 152.187 102.807 153.885C102.846 155.581 102.843 157.279 102.862 158.976C102.843 160.674 102.849 162.369 102.805 164.07C102.763 164.929 102.66 165.79 102.394 166.616C102.252 167.024 102.071 167.426 101.8 167.769C101.537 168.109 101.126 168.38 100.69 168.344C101.126 168.325 101.474 168.032 101.7 167.695C101.93 167.349 102.071 166.953 102.175 166.55C102.386 165.744 102.447 164.9 102.444 164.066L102.393 158.976C102.412 157.279 102.409 155.581 102.449 153.885C102.486 152.187 102.532 150.491 102.627 148.794Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M98.8489 132.387C98.8969 132.787 99.1043 133.126 99.4077 133.352C99.6968 133.591 100.056 133.769 100.391 134C101.068 134.446 101.654 135.07 102.068 135.778C102.478 136.497 102.716 137.31 102.763 138.124C102.807 138.945 102.709 139.723 102.628 140.519C102.576 140.124 102.552 139.728 102.514 139.331C102.491 138.932 102.473 138.545 102.406 138.164C102.278 137.403 102.047 136.667 101.662 136.013C101.285 135.347 100.77 134.783 100.176 134.287C99.8848 134.033 99.5425 133.821 99.2514 133.517C98.9674 133.213 98.7876 132.786 98.8489 132.387Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M97.7513 127C97.5796 127 97.2977 127 97.1271 127H94.2657C94.0941 127 93.9531 127.14 93.9531 127.313V129.789C93.9531 129.96 94.0941 130.101 94.2657 130.101H97.1271C97.2977 130.101 97.5796 130.101 97.7513 130.101H100.613C100.784 130.101 100.923 129.96 100.923 129.789V127.313C100.923 127.14 100.784 127 100.613 127H97.7513Z\"\n        fill=\"white\"/>\n      <path d=\"M97.4379 130.831H93.7256V130.363H97.4379V130.831Z\" fill=\"#276B8A\"/>\n      <path d=\"M101.152 130.831H97.438V130.363H101.152V130.831Z\" fill=\"#276B8A\"/>\n      <path\n        d=\"M93.2456 141.715C94.6431 141.532 96.0416 141.49 97.4401 141.482C98.8366 141.489 100.236 141.531 101.634 141.715C100.236 141.901 98.8366 141.943 97.4401 141.95C96.0416 141.942 94.6431 141.9 93.2456 141.715Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M93.2456 144.552C94.6431 144.368 96.0416 144.327 97.4401 144.318C98.8366 144.325 100.236 144.367 101.634 144.552C100.236 144.738 98.8366 144.78 97.4401 144.787C96.0416 144.779 94.6431 144.737 93.2456 144.552Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M93.2456 147.389C94.6431 147.204 96.0416 147.162 97.4401 147.154C98.8366 147.161 100.236 147.203 101.634 147.389C100.236 147.574 98.8366 147.616 97.4401 147.623C96.0416 147.615 94.6431 147.573 93.2456 147.389Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M100.691 169.595C99.0337 169.595 98.9049 168.788 97.438 168.788V147.623C97.439 147.623 97.44 147.623 97.44 147.623C98.8365 147.616 100.236 147.574 101.634 147.389C100.236 147.203 98.8365 147.161 97.44 147.154C97.44 147.154 97.439 147.154 97.438 147.154V144.787C97.439 144.787 97.44 144.787 97.44 144.787C98.8365 144.78 100.236 144.738 101.634 144.552C100.236 144.367 98.8365 144.325 97.44 144.318C97.44 144.318 97.439 144.318 97.438 144.318V141.95C97.439 141.95 97.44 141.95 97.44 141.95C98.8365 141.943 100.236 141.901 101.634 141.715C100.236 141.531 98.8365 141.489 97.44 141.482C97.44 141.482 97.439 141.482 97.438 141.482V137.15H102.164C102.269 137.479 102.348 137.819 102.406 138.164C102.473 138.545 102.491 138.932 102.514 139.331C102.552 139.728 102.575 140.124 102.627 140.519C102.709 139.723 102.807 138.945 102.763 138.124C102.745 137.797 102.695 137.47 102.615 137.15H103.674C103.828 137.812 103.878 138.428 103.878 138.935C103.878 139.142 103.878 139.36 103.878 139.586C103.878 140.178 103.878 140.829 103.878 141.525C103.878 141.659 103.763 141.769 103.623 141.769V142.075C103.763 142.075 103.878 142.185 103.878 142.321C103.878 142.939 103.878 143.588 103.878 144.258C103.878 144.394 103.763 144.503 103.623 144.503V144.81C103.763 144.81 103.878 144.92 103.878 145.054C103.878 145.685 103.878 146.334 103.878 146.993C103.878 147.127 103.763 147.237 103.623 147.237V147.543C103.763 147.543 103.878 147.653 103.878 147.788C103.878 148.429 103.878 149.076 103.878 149.725C103.878 155.464 103.878 161.363 103.878 163.78C103.878 167.942 102.347 169.595 100.691 169.595ZM102.627 148.794C102.532 150.491 102.487 152.187 102.449 153.885C102.409 155.581 102.412 157.279 102.394 158.976L102.445 164.066C102.448 164.9 102.386 165.744 102.175 166.55C102.071 166.953 101.93 167.349 101.7 167.695C101.474 168.032 101.126 168.325 100.691 168.344C100.716 168.347 100.743 168.347 100.768 168.347C101.174 168.347 101.553 168.089 101.8 167.769C102.071 167.426 102.253 167.024 102.395 166.616C102.66 165.79 102.763 164.929 102.805 164.07C102.849 162.369 102.843 160.674 102.862 158.976C102.843 157.279 102.846 155.581 102.807 153.885C102.769 152.187 102.724 150.491 102.627 148.794Z\"\n        fill=\"#3F9AC4\"/>\n      <path\n        d=\"M100.768 168.347C100.743 168.347 100.716 168.347 100.69 168.344C101.126 168.325 101.474 168.032 101.7 167.695C101.93 167.349 102.071 166.953 102.175 166.55C102.386 165.744 102.447 164.9 102.444 164.066L102.393 158.976C102.412 157.279 102.409 155.581 102.449 153.885C102.486 152.187 102.532 150.491 102.627 148.794C102.723 150.491 102.769 152.187 102.807 153.885C102.846 155.581 102.843 157.279 102.862 158.976C102.843 160.674 102.849 162.369 102.805 164.07C102.763 164.929 102.66 165.79 102.394 166.616C102.252 167.024 102.071 167.426 101.8 167.769C101.553 168.089 101.174 168.347 100.768 168.347Z\"\n        fill=\"#E2FAFA\"/>\n      <path\n        d=\"M102.627 140.519C102.575 140.124 102.552 139.728 102.514 139.331C102.49 138.932 102.473 138.545 102.406 138.164C102.347 137.819 102.269 137.479 102.164 137.15H102.615C102.695 137.47 102.745 137.797 102.763 138.124C102.807 138.945 102.709 139.723 102.627 140.519Z\"\n        fill=\"#E2FAFA\"/>\n      <path\n        d=\"M97.44 141.95C97.44 141.95 97.439 141.95 97.438 141.95V141.482C97.439 141.482 97.44 141.482 97.44 141.482C98.8365 141.489 100.236 141.531 101.634 141.715C100.236 141.901 98.8365 141.943 97.44 141.95Z\"\n        fill=\"#E2FAFA\"/>\n      <path\n        d=\"M97.44 144.787C97.44 144.787 97.439 144.787 97.438 144.787V144.318C97.439 144.318 97.44 144.318 97.44 144.318C98.8365 144.325 100.236 144.367 101.634 144.552C100.236 144.738 98.8365 144.78 97.44 144.787Z\"\n        fill=\"#E2FAFA\"/>\n      <path\n        d=\"M97.44 147.623C97.44 147.623 97.439 147.623 97.438 147.623V147.154C97.439 147.154 97.44 147.154 97.44 147.154C98.8365 147.161 100.236 147.203 101.634 147.389C100.236 147.574 98.8365 147.616 97.44 147.623Z\"\n        fill=\"#E2FAFA\"/>\n      <path\n        d=\"M104.586 119.311C104.586 119.311 104.586 122.111 104.586 122.387C104.586 122.661 103.518 123.074 102.37 124.604C101.223 126.134 101 127.805 101 128.935C101 129.142 101 129.36 101 129.586C101 130.178 101 130.829 101 131.525C101 131.659 101.115 131.769 101.254 131.769H107.182C107.324 131.769 107.438 131.659 107.438 131.523V129.587V119.311H104.586Z\"\n        fill=\"#D6FEFD\"/>\n      <path\n        d=\"M107.182 132.075H101.254C101.115 132.075 101 132.185 101 132.321C101 132.939 101 133.588 101 134.258C101 134.394 101.115 134.503 101.254 134.503H107.182C107.324 134.503 107.438 134.394 107.438 134.257V132.321C107.438 132.186 107.324 132.075 107.182 132.075Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M107.182 134.81H101.254C101.115 134.81 101 134.92 101 135.054C101 135.685 101 136.334 101 136.993C101 137.127 101.115 137.237 101.254 137.237H107.182C107.324 137.237 107.438 137.127 107.438 136.992V135.054C107.438 134.92 107.324 134.81 107.182 134.81Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M107.182 137.543H101.254C101.115 137.543 101 137.653 101 137.788C101 138.429 101 139.076 101 139.725C101 145.464 101 151.363 101 153.78C101 157.942 102.53 159.595 104.188 159.595C105.846 159.595 105.973 158.982 107.438 158.982V139.725V137.788C107.438 137.653 107.324 137.543 107.182 137.543Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M107.182 134.81C107.324 134.81 107.438 134.92 107.438 135.054V134.257C107.438 134.394 107.324 134.503 107.182 134.503H101.254V134.81H107.182Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M107.182 137.543C107.324 137.543 107.438 137.653 107.438 137.788V136.992C107.438 137.127 107.324 137.237 107.182 137.237H101.254V137.543H107.182Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M107.182 132.075C107.324 132.075 107.438 132.186 107.438 132.321V131.523C107.438 131.659 107.324 131.769 107.182 131.769H101.254V132.075H107.182Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M110.291 119.311C110.291 119.311 110.291 122.111 110.291 122.387C110.291 122.661 111.359 123.074 112.508 124.604C113.654 126.134 113.878 127.805 113.878 128.935C113.878 129.142 113.878 129.36 113.878 129.586C113.878 130.178 113.878 130.829 113.878 131.525C113.878 131.659 113.763 131.769 113.623 131.769H107.693C107.554 131.769 107.438 131.659 107.438 131.523V129.587V119.311H110.291Z\"\n        fill=\"#BDEEED\"/>\n      <path\n        d=\"M107.693 132.075H113.623C113.763 132.075 113.878 132.185 113.878 132.321C113.878 132.939 113.878 133.588 113.878 134.258C113.878 134.394 113.763 134.503 113.623 134.503H107.693C107.554 134.503 107.438 134.394 107.438 134.257V132.321C107.438 132.186 107.554 132.075 107.693 132.075Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M107.693 134.81H113.623C113.763 134.81 113.878 134.92 113.878 135.054C113.878 135.685 113.878 136.334 113.878 136.993C113.878 137.127 113.763 137.237 113.623 137.237H107.693C107.554 137.237 107.438 137.127 107.438 136.992V135.054C107.438 134.92 107.554 134.81 107.693 134.81Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M107.693 137.543H113.623C113.763 137.543 113.878 137.653 113.878 137.788C113.878 138.429 113.878 139.076 113.878 139.725C113.878 145.464 113.878 151.363 113.878 153.78C113.878 157.942 112.347 159.595 110.691 159.595C109.034 159.595 108.905 158.982 107.438 158.982V139.725V137.788C107.438 137.653 107.554 137.543 107.693 137.543Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M107.693 134.81C107.554 134.81 107.438 134.92 107.438 135.054V134.257C107.438 134.394 107.554 134.503 107.693 134.503H113.623V134.81H107.693Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M107.693 137.543C107.554 137.543 107.438 137.653 107.438 137.788V136.992C107.438 137.127 107.554 137.237 107.693 137.237H113.623V137.543H107.693Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M107.693 132.075C107.554 132.075 107.438 132.186 107.438 132.321V131.523C107.438 131.659 107.554 131.769 107.693 131.769H113.623V132.075H107.693Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M101 128.745C101 128.952 101 129.17 101 129.396C101 129.988 101 130.639 101 131.335C101 131.469 101.115 131.579 101.254 131.579V131.885C101.115 131.885 101 131.995 101 132.131C101 132.749 101 133.398 101 134.068C101 134.204 101.115 134.313 101.254 134.313V134.62C101.115 134.62 101 134.73 101 134.864C101 135.495 101 136.144 101 136.803C101 136.937 101.115 137.047 101.254 137.047V137.353C101.115 137.353 101 137.463 101 137.598C101 138.239 101 138.886 101 139.535C101 145.273 101 151.173 101 153.59C101 157.752 102.53 159.405 104.188 159.405C105.846 159.405 105.973 158.792 107.438 158.792C108.905 158.792 109.034 159.405 110.69 159.405C112.346 159.405 113.878 157.752 113.878 153.59C113.878 151.173 113.878 145.273 113.878 139.535C113.878 138.886 113.878 138.239 113.878 137.598C113.878 137.463 113.763 137.353 113.623 137.353V137.047C113.763 137.047 113.878 136.937 113.878 136.803C113.878 136.144 113.878 135.495 113.878 134.864C113.878 134.73 113.763 134.62 113.623 134.62V134.313C113.763 134.313 113.878 134.204 113.878 134.068C113.878 133.398 113.878 132.749 113.878 132.131C113.878 131.995 113.763 131.885 113.623 131.885V131.579C113.763 131.579 113.878 131.469 113.878 131.335C113.878 130.639 113.878 129.988 113.878 129.396C113.878 129.17 113.878 128.952 113.878 128.745C113.878 128.238 113.828 127.622 113.673 126.96H101.205C101.051 127.622 101 128.238 101 128.745Z\"\n        fill=\"#87E3FF\"/>\n      <path\n        d=\"M112.627 138.794C112.723 140.491 112.769 142.187 112.807 143.885C112.846 145.581 112.843 147.279 112.862 148.976C112.843 150.674 112.849 152.369 112.805 154.07C112.763 154.929 112.66 155.79 112.394 156.616C112.252 157.024 112.071 157.426 111.8 157.769C111.537 158.109 111.126 158.38 110.69 158.344C111.126 158.325 111.474 158.032 111.7 157.695C111.93 157.349 112.071 156.953 112.175 156.55C112.386 155.744 112.447 154.9 112.444 154.066L112.393 148.976C112.412 147.279 112.409 145.581 112.449 143.885C112.486 142.187 112.532 140.491 112.627 138.794Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M108.849 122.387C108.897 122.787 109.104 123.126 109.408 123.352C109.697 123.591 110.056 123.769 110.391 124C111.068 124.446 111.654 125.07 112.068 125.778C112.478 126.497 112.716 127.31 112.763 128.124C112.807 128.945 112.709 129.723 112.628 130.519C112.576 130.124 112.552 129.728 112.514 129.331C112.491 128.932 112.473 128.545 112.406 128.164C112.278 127.403 112.047 126.667 111.662 126.013C111.285 125.347 110.77 124.783 110.176 124.287C109.885 124.033 109.543 123.821 109.251 123.517C108.967 123.213 108.788 122.786 108.849 122.387Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M107.751 117C107.58 117 107.298 117 107.127 117H104.266C104.094 117 103.953 117.14 103.953 117.313V119.789C103.953 119.96 104.094 120.101 104.266 120.101H107.127C107.298 120.101 107.58 120.101 107.751 120.101H110.613C110.784 120.101 110.923 119.96 110.923 119.789V117.313C110.923 117.14 110.784 117 110.613 117H107.751Z\"\n        fill=\"white\"/>\n      <path d=\"M107.438 120.831H103.726V120.363H107.438V120.831Z\" fill=\"#276B8A\"/>\n      <path d=\"M111.152 120.831H107.438V120.363H111.152V120.831Z\" fill=\"#276B8A\"/>\n      <path\n        d=\"M103.246 131.715C104.643 131.532 106.042 131.49 107.44 131.482C108.837 131.489 110.236 131.531 111.634 131.715C110.236 131.901 108.837 131.943 107.44 131.95C106.042 131.942 104.643 131.9 103.246 131.715Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M103.246 134.552C104.643 134.368 106.042 134.327 107.44 134.318C108.837 134.325 110.236 134.367 111.634 134.552C110.236 134.738 108.837 134.78 107.44 134.787C106.042 134.779 104.643 134.737 103.246 134.552Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M103.246 137.389C104.643 137.204 106.042 137.162 107.44 137.154C108.837 137.161 110.236 137.203 111.634 137.389C110.236 137.574 108.837 137.616 107.44 137.623C106.042 137.615 104.643 137.573 103.246 137.389Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M110.691 159.595C109.034 159.595 108.905 158.788 107.438 158.788V137.623C107.439 137.623 107.44 137.623 107.44 137.623C108.836 137.616 110.236 137.574 111.634 137.389C110.236 137.203 108.836 137.161 107.44 137.154C107.44 137.154 107.439 137.154 107.438 137.154V134.787C107.439 134.787 107.44 134.787 107.44 134.787C108.836 134.78 110.236 134.738 111.634 134.552C110.236 134.367 108.836 134.325 107.44 134.318C107.44 134.318 107.439 134.318 107.438 134.318V131.95C107.439 131.95 107.44 131.95 107.44 131.95C108.836 131.943 110.236 131.901 111.634 131.715C110.236 131.531 108.836 131.489 107.44 131.482C107.44 131.482 107.439 131.482 107.438 131.482V127.15H112.164C112.269 127.479 112.348 127.819 112.406 128.164C112.473 128.545 112.491 128.932 112.514 129.331C112.552 129.728 112.575 130.124 112.627 130.519C112.709 129.723 112.807 128.945 112.763 128.124C112.745 127.797 112.695 127.47 112.615 127.15H113.674C113.828 127.812 113.878 128.428 113.878 128.935C113.878 129.142 113.878 129.36 113.878 129.586C113.878 130.178 113.878 130.829 113.878 131.525C113.878 131.659 113.763 131.769 113.623 131.769V132.075C113.763 132.075 113.878 132.185 113.878 132.321C113.878 132.939 113.878 133.588 113.878 134.258C113.878 134.394 113.763 134.503 113.623 134.503V134.81C113.763 134.81 113.878 134.92 113.878 135.054C113.878 135.685 113.878 136.334 113.878 136.993C113.878 137.127 113.763 137.237 113.623 137.237V137.543C113.763 137.543 113.878 137.653 113.878 137.788C113.878 138.429 113.878 139.076 113.878 139.725C113.878 145.464 113.878 151.363 113.878 153.78C113.878 157.942 112.347 159.595 110.691 159.595ZM112.627 138.794C112.532 140.491 112.487 142.187 112.449 143.885C112.409 145.581 112.412 147.279 112.394 148.976L112.445 154.066C112.448 154.9 112.386 155.744 112.175 156.55C112.071 156.953 111.93 157.349 111.7 157.695C111.474 158.032 111.126 158.325 110.691 158.344C110.716 158.347 110.743 158.347 110.768 158.347C111.174 158.347 111.553 158.089 111.8 157.769C112.071 157.426 112.253 157.024 112.395 156.616C112.66 155.79 112.763 154.929 112.805 154.07C112.849 152.369 112.843 150.674 112.862 148.976C112.843 147.279 112.846 145.581 112.807 143.885C112.769 142.187 112.724 140.491 112.627 138.794Z\"\n        fill=\"#3F9AC4\"/>\n      <path\n        d=\"M110.768 158.347C110.743 158.347 110.716 158.347 110.69 158.344C111.126 158.325 111.474 158.032 111.7 157.695C111.93 157.349 112.071 156.953 112.175 156.55C112.386 155.744 112.447 154.9 112.444 154.066L112.393 148.976C112.412 147.279 112.409 145.581 112.449 143.885C112.486 142.187 112.532 140.491 112.627 138.794C112.723 140.491 112.769 142.187 112.807 143.885C112.846 145.581 112.843 147.279 112.862 148.976C112.843 150.674 112.849 152.369 112.805 154.07C112.763 154.929 112.66 155.79 112.394 156.616C112.252 157.024 112.071 157.426 111.8 157.769C111.553 158.089 111.174 158.347 110.768 158.347Z\"\n        fill=\"#E2FAFA\"/>\n      <path\n        d=\"M112.627 130.519C112.575 130.124 112.552 129.728 112.514 129.331C112.49 128.932 112.473 128.545 112.406 128.164C112.347 127.819 112.269 127.479 112.164 127.15H112.615C112.695 127.47 112.745 127.797 112.763 128.124C112.807 128.945 112.709 129.723 112.627 130.519Z\"\n        fill=\"#E2FAFA\"/>\n      <path\n        d=\"M107.44 131.95C107.44 131.95 107.439 131.95 107.438 131.95V131.482C107.439 131.482 107.44 131.482 107.44 131.482C108.836 131.489 110.236 131.531 111.634 131.715C110.236 131.901 108.836 131.943 107.44 131.95Z\"\n        fill=\"#E2FAFA\"/>\n      <path\n        d=\"M107.44 134.787C107.44 134.787 107.439 134.787 107.438 134.787V134.318C107.439 134.318 107.44 134.318 107.44 134.318C108.836 134.325 110.236 134.367 111.634 134.552C110.236 134.738 108.836 134.78 107.44 134.787Z\"\n        fill=\"#E2FAFA\"/>\n      <path\n        d=\"M107.44 137.623C107.44 137.623 107.439 137.623 107.438 137.623V137.154C107.439 137.154 107.44 137.154 107.44 137.154C108.836 137.161 110.236 137.203 111.634 137.389C110.236 137.574 108.836 137.616 107.44 137.623Z\"\n        fill=\"#E2FAFA\"/>\n      <path\n        d=\"M120.586 121.311C120.586 121.311 120.586 124.111 120.586 124.387C120.586 124.661 119.518 125.074 118.37 126.604C117.223 128.134 117 129.805 117 130.935C117 131.142 117 131.36 117 131.586C117 132.178 117 132.829 117 133.525C117 133.659 117.115 133.769 117.254 133.769H123.182C123.324 133.769 123.438 133.659 123.438 133.523V131.587V121.311H120.586Z\"\n        fill=\"#D6FEFD\"/>\n      <path\n        d=\"M123.182 134.075H117.254C117.115 134.075 117 134.185 117 134.321C117 134.939 117 135.588 117 136.258C117 136.394 117.115 136.503 117.254 136.503H123.182C123.324 136.503 123.438 136.394 123.438 136.257V134.321C123.438 134.186 123.324 134.075 123.182 134.075Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M123.182 136.81H117.254C117.115 136.81 117 136.92 117 137.054C117 137.685 117 138.334 117 138.993C117 139.127 117.115 139.237 117.254 139.237H123.182C123.324 139.237 123.438 139.127 123.438 138.992V137.054C123.438 136.92 123.324 136.81 123.182 136.81Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M123.182 139.543H117.254C117.115 139.543 117 139.653 117 139.788C117 140.429 117 141.076 117 141.725C117 147.464 117 153.363 117 155.78C117 159.942 118.53 161.595 120.188 161.595C121.846 161.595 121.973 160.982 123.438 160.982V141.725V139.788C123.438 139.653 123.324 139.543 123.182 139.543Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M123.182 136.81C123.324 136.81 123.438 136.92 123.438 137.054V136.257C123.438 136.394 123.324 136.503 123.182 136.503H117.254V136.81H123.182Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M123.182 139.543C123.324 139.543 123.438 139.653 123.438 139.788V138.992C123.438 139.127 123.324 139.237 123.182 139.237H117.254V139.543H123.182Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M123.182 134.075C123.324 134.075 123.438 134.186 123.438 134.321V133.523C123.438 133.659 123.324 133.769 123.182 133.769H117.254V134.075H123.182Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M126.291 121.311C126.291 121.311 126.291 124.111 126.291 124.387C126.291 124.661 127.359 125.074 128.508 126.604C129.654 128.134 129.878 129.805 129.878 130.935C129.878 131.142 129.878 131.36 129.878 131.586C129.878 132.178 129.878 132.829 129.878 133.525C129.878 133.659 129.763 133.769 129.623 133.769H123.693C123.554 133.769 123.438 133.659 123.438 133.523V131.587V121.311H126.291Z\"\n        fill=\"#BDEEED\"/>\n      <path\n        d=\"M123.693 134.075H129.623C129.763 134.075 129.878 134.185 129.878 134.321C129.878 134.939 129.878 135.588 129.878 136.258C129.878 136.394 129.763 136.503 129.623 136.503H123.693C123.554 136.503 123.438 136.394 123.438 136.257V134.321C123.438 134.186 123.554 134.075 123.693 134.075Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M123.693 136.81H129.623C129.763 136.81 129.878 136.92 129.878 137.054C129.878 137.685 129.878 138.334 129.878 138.993C129.878 139.127 129.763 139.237 129.623 139.237H123.693C123.554 139.237 123.438 139.127 123.438 138.992V137.054C123.438 136.92 123.554 136.81 123.693 136.81Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M123.693 139.543H129.623C129.763 139.543 129.878 139.653 129.878 139.788C129.878 140.429 129.878 141.076 129.878 141.725C129.878 147.464 129.878 153.363 129.878 155.78C129.878 159.942 128.347 161.595 126.691 161.595C125.034 161.595 124.905 160.982 123.438 160.982V141.725V139.788C123.438 139.653 123.554 139.543 123.693 139.543Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M123.693 136.81C123.554 136.81 123.438 136.92 123.438 137.054V136.257C123.438 136.394 123.554 136.503 123.693 136.503H129.623V136.81H123.693Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M123.693 139.543C123.554 139.543 123.438 139.653 123.438 139.788V138.992C123.438 139.127 123.554 139.237 123.693 139.237H129.623V139.543H123.693Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M123.693 134.075C123.554 134.075 123.438 134.186 123.438 134.321V133.523C123.438 133.659 123.554 133.769 123.693 133.769H129.623V134.075H123.693Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M117 130.745C117 130.952 117 131.17 117 131.396C117 131.988 117 132.639 117 133.335C117 133.469 117.115 133.579 117.254 133.579V133.885C117.115 133.885 117 133.995 117 134.131C117 134.749 117 135.398 117 136.068C117 136.204 117.115 136.313 117.254 136.313V136.62C117.115 136.62 117 136.73 117 136.864C117 137.495 117 138.144 117 138.803C117 138.937 117.115 139.047 117.254 139.047V139.353C117.115 139.353 117 139.463 117 139.598C117 140.239 117 140.886 117 141.535C117 147.273 117 153.173 117 155.59C117 159.752 118.53 161.405 120.188 161.405C121.846 161.405 121.973 160.792 123.438 160.792C124.905 160.792 125.034 161.405 126.69 161.405C128.346 161.405 129.878 159.752 129.878 155.59C129.878 153.173 129.878 147.273 129.878 141.535C129.878 140.886 129.878 140.239 129.878 139.598C129.878 139.463 129.763 139.353 129.623 139.353V139.047C129.763 139.047 129.878 138.937 129.878 138.803C129.878 138.144 129.878 137.495 129.878 136.864C129.878 136.73 129.763 136.62 129.623 136.62V136.313C129.763 136.313 129.878 136.204 129.878 136.068C129.878 135.398 129.878 134.749 129.878 134.131C129.878 133.995 129.763 133.885 129.623 133.885V133.579C129.763 133.579 129.878 133.469 129.878 133.335C129.878 132.639 129.878 131.988 129.878 131.396C129.878 131.17 129.878 130.952 129.878 130.745C129.878 130.238 129.828 129.622 129.673 128.96H117.205C117.051 129.622 117 130.238 117 130.745Z\"\n        fill=\"#87E3FF\"/>\n      <path\n        d=\"M124.849 124.387C124.897 124.787 125.104 125.126 125.408 125.352C125.697 125.591 126.056 125.769 126.391 126C127.068 126.446 127.654 127.07 128.068 127.778C128.478 128.497 128.716 129.31 128.763 130.124C128.807 130.945 128.709 131.723 128.628 132.519C128.576 132.124 128.552 131.728 128.514 131.331C128.491 130.932 128.473 130.545 128.406 130.164C128.278 129.403 128.047 128.667 127.662 128.013C127.285 127.347 126.77 126.783 126.176 126.287C125.885 126.033 125.543 125.821 125.251 125.517C124.967 125.213 124.788 124.786 124.849 124.387Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M123.751 119C123.58 119 123.298 119 123.127 119H120.266C120.094 119 119.953 119.14 119.953 119.313V121.789C119.953 121.96 120.094 122.101 120.266 122.101H123.127C123.298 122.101 123.58 122.101 123.751 122.101H126.613C126.784 122.101 126.923 121.96 126.923 121.789V119.313C126.923 119.14 126.784 119 126.613 119H123.751Z\"\n        fill=\"white\"/>\n      <path d=\"M123.438 122.831H119.726V122.363H123.438V122.831Z\" fill=\"#276B8A\"/>\n      <path d=\"M127.152 122.831H123.438V122.363H127.152V122.831Z\" fill=\"#276B8A\"/>\n      <path\n        d=\"M119.246 133.715C120.643 133.532 122.042 133.49 123.44 133.482C124.837 133.489 126.236 133.531 127.634 133.715C126.236 133.901 124.837 133.943 123.44 133.95C122.042 133.942 120.643 133.9 119.246 133.715Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M119.246 136.552C120.643 136.368 122.042 136.327 123.44 136.318C124.837 136.325 126.236 136.367 127.634 136.552C126.236 136.738 124.837 136.78 123.44 136.787C122.042 136.779 120.643 136.737 119.246 136.552Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M119.246 139.389C120.643 139.204 122.042 139.162 123.44 139.154C124.837 139.161 126.236 139.203 127.634 139.389C126.236 139.574 124.837 139.616 123.44 139.623C122.042 139.615 120.643 139.573 119.246 139.389Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M126.691 161.595C125.034 161.595 124.905 160.788 123.438 160.788V139.623C123.439 139.623 123.44 139.623 123.44 139.623C124.836 139.616 126.236 139.574 127.634 139.389C126.236 139.203 124.836 139.161 123.44 139.154C123.44 139.154 123.439 139.154 123.438 139.154V136.787C123.439 136.787 123.44 136.787 123.44 136.787C124.836 136.78 126.236 136.738 127.634 136.552C126.236 136.367 124.836 136.325 123.44 136.318C123.44 136.318 123.439 136.318 123.438 136.318V133.95C123.439 133.95 123.44 133.95 123.44 133.95C124.836 133.943 126.236 133.901 127.634 133.715C126.236 133.531 124.836 133.489 123.44 133.482C123.44 133.482 123.439 133.482 123.438 133.482V129.15H128.164C128.269 129.479 128.348 129.819 128.406 130.164C128.473 130.545 128.491 130.932 128.514 131.331C128.552 131.728 128.575 132.124 128.627 132.519C128.709 131.723 128.807 130.945 128.763 130.124C128.745 129.797 128.695 129.47 128.615 129.15H129.674C129.828 129.812 129.878 130.428 129.878 130.935C129.878 131.142 129.878 131.36 129.878 131.586C129.878 132.178 129.878 132.829 129.878 133.525C129.878 133.659 129.763 133.769 129.623 133.769V134.075C129.763 134.075 129.878 134.185 129.878 134.321C129.878 134.939 129.878 135.588 129.878 136.258C129.878 136.394 129.763 136.503 129.623 136.503V136.81C129.763 136.81 129.878 136.92 129.878 137.054C129.878 137.685 129.878 138.334 129.878 138.993C129.878 139.127 129.763 139.237 129.623 139.237V139.543C129.763 139.543 129.878 139.653 129.878 139.788C129.878 140.429 129.878 141.076 129.878 141.725C129.878 147.464 129.878 153.363 129.878 155.78C129.878 159.942 128.347 161.595 126.691 161.595ZM128.627 140.794C128.532 142.491 128.487 144.187 128.449 145.885C128.409 147.581 128.412 149.279 128.394 150.976L128.445 156.066C128.448 156.9 128.386 157.744 128.175 158.55C128.071 158.953 127.93 159.349 127.7 159.695C127.474 160.032 127.126 160.325 126.691 160.344C126.716 160.347 126.743 160.347 126.768 160.347C127.174 160.347 127.553 160.089 127.8 159.769C128.071 159.426 128.253 159.024 128.395 158.616C128.66 157.79 128.763 156.929 128.805 156.07C128.849 154.369 128.843 152.674 128.862 150.976C128.843 149.279 128.846 147.581 128.807 145.885C128.769 144.187 128.724 142.491 128.627 140.794Z\"\n        fill=\"#3F9AC4\"/>\n      <path\n        d=\"M123.44 133.95C123.44 133.95 123.439 133.95 123.438 133.95V133.482C123.439 133.482 123.44 133.482 123.44 133.482C124.836 133.489 126.236 133.531 127.634 133.715C126.236 133.901 124.836 133.943 123.44 133.95Z\"\n        fill=\"#E2FAFA\"/>\n      <path\n        d=\"M123.44 136.787C123.44 136.787 123.439 136.787 123.438 136.787V136.318C123.439 136.318 123.44 136.318 123.44 136.318C124.836 136.325 126.236 136.367 127.634 136.552C126.236 136.738 124.836 136.78 123.44 136.787Z\"\n        fill=\"#E2FAFA\"/>\n      <path\n        d=\"M123.44 139.623C123.44 139.623 123.439 139.623 123.438 139.623V139.154C123.439 139.154 123.44 139.154 123.44 139.154C124.836 139.161 126.236 139.203 127.634 139.389C126.236 139.574 124.836 139.616 123.44 139.623Z\"\n        fill=\"#E2FAFA\"/>\n      <path\n        d=\"M114.586 129.311C114.586 129.311 114.586 132.111 114.586 132.387C114.586 132.661 113.518 133.074 112.37 134.604C111.223 136.134 111 137.805 111 138.935C111 139.142 111 139.36 111 139.586C111 140.178 111 140.829 111 141.525C111 141.659 111.115 141.769 111.254 141.769H117.182C117.324 141.769 117.438 141.659 117.438 141.523V139.587V129.311H114.586Z\"\n        fill=\"#D6FEFD\"/>\n      <path\n        d=\"M117.182 142.075H111.254C111.115 142.075 111 142.185 111 142.321C111 142.939 111 143.588 111 144.258C111 144.394 111.115 144.503 111.254 144.503H117.182C117.324 144.503 117.438 144.394 117.438 144.257V142.321C117.438 142.186 117.324 142.075 117.182 142.075Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M117.182 144.81H111.254C111.115 144.81 111 144.92 111 145.054C111 145.685 111 146.334 111 146.993C111 147.127 111.115 147.237 111.254 147.237H117.182C117.324 147.237 117.438 147.127 117.438 146.992V145.054C117.438 144.92 117.324 144.81 117.182 144.81Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M117.182 147.543H111.254C111.115 147.543 111 147.653 111 147.788C111 148.429 111 149.076 111 149.725C111 155.464 111 161.363 111 163.78C111 167.942 112.53 169.595 114.188 169.595C115.846 169.595 115.973 168.982 117.438 168.982V149.725V147.788C117.438 147.653 117.324 147.543 117.182 147.543Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M117.182 144.81C117.324 144.81 117.438 144.92 117.438 145.054V144.257C117.438 144.394 117.324 144.503 117.182 144.503H111.254V144.81H117.182Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M117.182 147.543C117.324 147.543 117.438 147.653 117.438 147.788V146.992C117.438 147.127 117.324 147.237 117.182 147.237H111.254V147.543H117.182Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M117.182 142.075C117.324 142.075 117.438 142.186 117.438 142.321V141.523C117.438 141.659 117.324 141.769 117.182 141.769H111.254V142.075H117.182Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M120.291 129.311C120.291 129.311 120.291 132.111 120.291 132.387C120.291 132.661 121.359 133.074 122.508 134.604C123.654 136.134 123.878 137.805 123.878 138.935C123.878 139.142 123.878 139.36 123.878 139.586C123.878 140.178 123.878 140.829 123.878 141.525C123.878 141.659 123.763 141.769 123.623 141.769H117.693C117.554 141.769 117.438 141.659 117.438 141.523V139.587V129.311H120.291Z\"\n        fill=\"#BDEEED\"/>\n      <path\n        d=\"M117.693 142.075H123.623C123.763 142.075 123.878 142.185 123.878 142.321C123.878 142.939 123.878 143.588 123.878 144.258C123.878 144.394 123.763 144.503 123.623 144.503H117.693C117.554 144.503 117.438 144.394 117.438 144.257V142.321C117.438 142.186 117.554 142.075 117.693 142.075Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M117.693 144.81H123.623C123.763 144.81 123.878 144.92 123.878 145.054C123.878 145.685 123.878 146.334 123.878 146.993C123.878 147.127 123.763 147.237 123.623 147.237H117.693C117.554 147.237 117.438 147.127 117.438 146.992V145.054C117.438 144.92 117.554 144.81 117.693 144.81Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M117.693 147.543H123.623C123.763 147.543 123.878 147.653 123.878 147.788C123.878 148.429 123.878 149.076 123.878 149.725C123.878 155.464 123.878 161.363 123.878 163.78C123.878 167.942 122.347 169.595 120.691 169.595C119.034 169.595 118.905 168.982 117.438 168.982V149.725V147.788C117.438 147.653 117.554 147.543 117.693 147.543Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M117.693 144.81C117.554 144.81 117.438 144.92 117.438 145.054V144.257C117.438 144.394 117.554 144.503 117.693 144.503H123.623V144.81H117.693Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M117.693 147.543C117.554 147.543 117.438 147.653 117.438 147.788V146.992C117.438 147.127 117.554 147.237 117.693 147.237H123.623V147.543H117.693Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M117.693 142.075C117.554 142.075 117.438 142.186 117.438 142.321V141.523C117.438 141.659 117.554 141.769 117.693 141.769H123.623V142.075H117.693Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M111 138.745C111 138.952 111 139.17 111 139.396C111 139.988 111 140.639 111 141.335C111 141.469 111.115 141.579 111.254 141.579V141.885C111.115 141.885 111 141.995 111 142.131C111 142.749 111 143.398 111 144.068C111 144.204 111.115 144.313 111.254 144.313V144.62C111.115 144.62 111 144.73 111 144.864C111 145.495 111 146.144 111 146.803C111 146.937 111.115 147.047 111.254 147.047V147.353C111.115 147.353 111 147.463 111 147.598C111 148.239 111 148.886 111 149.535C111 155.273 111 161.173 111 163.59C111 167.752 112.53 169.405 114.188 169.405C115.846 169.405 115.973 168.792 117.438 168.792C118.905 168.792 119.034 169.405 120.69 169.405C122.346 169.405 123.878 167.752 123.878 163.59C123.878 161.173 123.878 155.273 123.878 149.535C123.878 148.886 123.878 148.239 123.878 147.598C123.878 147.463 123.763 147.353 123.623 147.353V147.047C123.763 147.047 123.878 146.937 123.878 146.803C123.878 146.144 123.878 145.495 123.878 144.864C123.878 144.73 123.763 144.62 123.623 144.62V144.313C123.763 144.313 123.878 144.204 123.878 144.068C123.878 143.398 123.878 142.749 123.878 142.131C123.878 141.995 123.763 141.885 123.623 141.885V141.579C123.763 141.579 123.878 141.469 123.878 141.335C123.878 140.639 123.878 139.988 123.878 139.396C123.878 139.17 123.878 138.952 123.878 138.745C123.878 138.238 123.828 137.622 123.673 136.96H111.205C111.051 137.622 111 138.238 111 138.745Z\"\n        fill=\"#87E3FF\"/>\n      <path\n        d=\"M122.627 148.794C122.723 150.491 122.769 152.187 122.807 153.885C122.846 155.581 122.843 157.279 122.862 158.976C122.843 160.674 122.849 162.369 122.805 164.07C122.763 164.929 122.66 165.79 122.394 166.616C122.252 167.024 122.071 167.426 121.8 167.769C121.537 168.109 121.126 168.38 120.69 168.344C121.126 168.325 121.474 168.032 121.7 167.695C121.93 167.349 122.071 166.953 122.175 166.55C122.386 165.744 122.447 164.9 122.444 164.066L122.393 158.976C122.412 157.279 122.409 155.581 122.449 153.885C122.486 152.187 122.532 150.491 122.627 148.794Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M118.849 132.387C118.897 132.787 119.104 133.126 119.408 133.352C119.697 133.591 120.056 133.769 120.391 134C121.068 134.446 121.654 135.07 122.068 135.778C122.478 136.497 122.716 137.31 122.763 138.124C122.807 138.945 122.709 139.723 122.628 140.519C122.576 140.124 122.552 139.728 122.514 139.331C122.491 138.932 122.473 138.545 122.406 138.164C122.278 137.403 122.047 136.667 121.662 136.013C121.285 135.347 120.77 134.783 120.176 134.287C119.885 134.033 119.543 133.821 119.251 133.517C118.967 133.213 118.788 132.786 118.849 132.387Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M117.751 127C117.58 127 117.298 127 117.127 127H114.266C114.094 127 113.953 127.14 113.953 127.313V129.789C113.953 129.96 114.094 130.101 114.266 130.101H117.127C117.298 130.101 117.58 130.101 117.751 130.101H120.613C120.784 130.101 120.923 129.96 120.923 129.789V127.313C120.923 127.14 120.784 127 120.613 127H117.751Z\"\n        fill=\"white\"/>\n      <path d=\"M117.438 130.831H113.726V130.363H117.438V130.831Z\" fill=\"#276B8A\"/>\n      <path d=\"M121.152 130.831H117.438V130.363H121.152V130.831Z\" fill=\"#276B8A\"/>\n      <path\n        d=\"M113.246 141.715C114.643 141.532 116.042 141.49 117.44 141.482C118.837 141.489 120.236 141.531 121.634 141.715C120.236 141.901 118.837 141.943 117.44 141.95C116.042 141.942 114.643 141.9 113.246 141.715Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M113.246 144.552C114.643 144.368 116.042 144.327 117.44 144.318C118.837 144.325 120.236 144.367 121.634 144.552C120.236 144.738 118.837 144.78 117.44 144.787C116.042 144.779 114.643 144.737 113.246 144.552Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M113.246 147.389C114.643 147.204 116.042 147.162 117.44 147.154C118.837 147.161 120.236 147.203 121.634 147.389C120.236 147.574 118.837 147.616 117.44 147.623C116.042 147.615 114.643 147.573 113.246 147.389Z\"\n        fill=\"white\"/>\n      <path\n        d=\"M120.691 169.595C119.034 169.595 118.905 168.788 117.438 168.788V147.623C117.439 147.623 117.44 147.623 117.44 147.623C118.836 147.616 120.236 147.574 121.634 147.389C120.236 147.203 118.836 147.161 117.44 147.154C117.44 147.154 117.439 147.154 117.438 147.154V144.787C117.439 144.787 117.44 144.787 117.44 144.787C118.836 144.78 120.236 144.738 121.634 144.552C120.236 144.367 118.836 144.325 117.44 144.318C117.44 144.318 117.439 144.318 117.438 144.318V141.95C117.439 141.95 117.44 141.95 117.44 141.95C118.836 141.943 120.236 141.901 121.634 141.715C120.236 141.531 118.836 141.489 117.44 141.482C117.44 141.482 117.439 141.482 117.438 141.482V137.15H122.164C122.269 137.479 122.348 137.819 122.406 138.164C122.473 138.545 122.491 138.932 122.514 139.331C122.552 139.728 122.575 140.124 122.627 140.519C122.709 139.723 122.807 138.945 122.763 138.124C122.745 137.797 122.695 137.47 122.615 137.15H123.674C123.828 137.812 123.878 138.428 123.878 138.935C123.878 139.142 123.878 139.36 123.878 139.586C123.878 140.178 123.878 140.829 123.878 141.525C123.878 141.659 123.763 141.769 123.623 141.769V142.075C123.763 142.075 123.878 142.185 123.878 142.321C123.878 142.939 123.878 143.588 123.878 144.258C123.878 144.394 123.763 144.503 123.623 144.503V144.81C123.763 144.81 123.878 144.92 123.878 145.054C123.878 145.685 123.878 146.334 123.878 146.993C123.878 147.127 123.763 147.237 123.623 147.237V147.543C123.763 147.543 123.878 147.653 123.878 147.788C123.878 148.429 123.878 149.076 123.878 149.725C123.878 155.464 123.878 161.363 123.878 163.78C123.878 167.942 122.347 169.595 120.691 169.595ZM122.846 157C122.751 158.697 120.038 156.302 120 158C119.96 159.696 122.412 157.279 122.394 158.976L122.445 164.066C122.448 164.9 122.386 165.744 122.175 166.55C122.071 166.953 121.93 167.349 121.7 167.695C121.474 168.032 121.126 168.325 120.691 168.344C120.716 168.347 120.743 168.347 120.768 168.347C121.174 168.347 121.553 168.089 121.8 167.769C122.071 167.426 122.253 167.024 122.395 166.616C122.66 165.79 122.763 164.929 122.805 164.07C122.849 162.369 122.843 160.674 122.862 158.976C122.843 157.279 123.539 159.196 123.5 157.5C123.462 155.802 122.942 158.697 122.846 157Z\"\n        fill=\"#3F9AC4\"/>\n      <path\n        d=\"M122.627 140.519C122.575 140.124 122.552 139.728 122.514 139.331C122.49 138.932 122.473 138.545 122.406 138.164C122.347 137.819 122.269 137.479 122.164 137.15H122.615C122.695 137.47 122.745 137.797 122.763 138.124C122.807 138.945 122.709 139.723 122.627 140.519Z\"\n        fill=\"#E2FAFA\"/>\n      <path\n        d=\"M117.44 141.95C117.44 141.95 117.439 141.95 117.438 141.95V141.482C117.439 141.482 117.44 141.482 117.44 141.482C118.836 141.489 120.236 141.531 121.634 141.715C120.236 141.901 118.836 141.943 117.44 141.95Z\"\n        fill=\"#E2FAFA\"/>\n      <path\n        d=\"M117.44 144.787C117.44 144.787 117.439 144.787 117.438 144.787V144.318C117.439 144.318 117.44 144.318 117.44 144.318C118.836 144.325 120.236 144.367 121.634 144.552C120.236 144.738 118.836 144.78 117.44 144.787Z\"\n        fill=\"#E2FAFA\"/>\n      <path\n        d=\"M117.44 147.623C117.44 147.623 117.439 147.623 117.438 147.623V147.154C117.439 147.154 117.44 147.154 117.44 147.154C118.836 147.161 120.236 147.203 121.634 147.389C120.236 147.574 118.836 147.616 117.44 147.623Z\"\n        fill=\"#E2FAFA\"/>\n    </g>\n    <defs>\n      <filter\n        id=\"filter0_d\"\n        width=\"156\"\n        height=\"190\"\n        x=\"0\"\n        y=\"0\"\n        colorInterpolationFilters=\"sRGB\"\n        filterUnits=\"userSpaceOnUse\"\n      >\n        <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\"></feFlood>\n        <feColorMatrix\n          in=\"SourceAlpha\"\n          values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n        ></feColorMatrix>\n        <feOffset dy=\"4\"></feOffset>\n        <feGaussianBlur stdDeviation=\"15\"></feGaussianBlur>\n        <feColorMatrix values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.05 0\"></feColorMatrix>\n        <feBlend\n          in2=\"BackgroundImageFix\"\n          result=\"effect1_dropShadow\"\n        ></feBlend>\n        <feBlend\n          in=\"SourceGraphic\"\n          in2=\"effect1_dropShadow\"\n          result=\"shape\"\n        ></feBlend>\n      </filter>\n    </defs>\n    {/*Дефолтный текст из SVG: */}\n    {/*<path*/}\n    {/*  d=\"M43.098 48.952C43.098 47.14 43.482 45.688 44.25 44.596C45.018 43.48 46.146 42.922 47.634 42.922C49.122 42.922 50.244 43.474 51 44.578C51.768 45.67 52.152 47.128 52.152 48.952C52.152 50.8 51.762 52.306 50.982 53.47C50.214 54.622 49.098 55.198 47.634 55.198C46.17 55.198 45.048 54.616 44.268 53.452C43.488 52.288 43.098 50.788 43.098 48.952ZM50.172 48.97C50.172 46.102 49.326 44.668 47.634 44.668C45.93 44.668 45.078 46.102 45.078 48.97C45.078 51.958 45.93 53.452 47.634 53.452C49.326 53.452 50.172 51.958 50.172 48.97ZM54.4602 58.204L54.6402 53.092H56.8362L55.9902 58.204H54.4602ZM67.2991 51.166C67.2991 52.342 66.8731 53.308 66.0211 54.064C65.1691 54.82 64.1371 55.198 62.9251 55.198C61.9651 55.198 61.1191 54.97 60.3871 54.514C59.6551 54.058 59.0791 53.434 58.6591 52.642L59.9911 51.688C60.7591 52.864 61.7191 53.452 62.8711 53.452C63.5911 53.452 64.1791 53.248 64.6351 52.84C65.1031 52.42 65.3371 51.874 65.3371 51.202C65.3371 50.53 65.0971 50.014 64.6171 49.654C64.1491 49.282 63.4771 49.096 62.6011 49.096H59.8651V43.12H66.6331V44.83H61.7371V47.62C62.2051 47.512 62.7091 47.458 63.2491 47.458C64.3771 47.458 65.3311 47.788 66.1111 48.448C66.9031 49.108 67.2991 50.014 67.2991 51.166ZM75.3248 46.162H81.8228V55H79.9328V47.8H77.0888L77.0708 48.682C77.0108 50.986 76.7588 52.636 76.3148 53.632C75.8828 54.616 75.1448 55.108 74.1008 55.108C73.8488 55.108 73.6208 55.072 73.4168 55V53.416C73.6088 53.44 73.7288 53.452 73.7768 53.452C74.3048 53.452 74.6828 53.056 74.9108 52.264C75.1388 51.472 75.2648 50.176 75.2888 48.376L75.3248 46.162Z\"*/}\n    {/*  fill=\"#455273\"/>*/}\n    {/*<path*/}\n    {/*  d=\"M44.53 66.4H44.9V73H43.84V67.65L42.5 68.08L42.24 67.15L44.53 66.4ZM48.2965 72.08H51.0865V73H46.3565V72.76L48.7065 70.23C49.0865 69.83 49.3565 69.4967 49.5165 69.23C49.6765 68.9633 49.7565 68.6933 49.7565 68.42C49.7565 68.08 49.6565 67.8033 49.4565 67.59C49.2565 67.37 48.9898 67.26 48.6565 67.26C48.3232 67.26 48.0532 67.3733 47.8465 67.6C47.6398 67.8267 47.5365 68.1133 47.5365 68.46C47.5365 68.58 47.5532 68.75 47.5865 68.97H46.5165C46.4698 68.8033 46.4465 68.6133 46.4465 68.4C46.4465 67.8333 46.6532 67.34 47.0665 66.92C47.4798 66.5 48.0132 66.29 48.6665 66.29C49.2932 66.29 49.8132 66.4867 50.2265 66.88C50.6465 67.2733 50.8565 67.76 50.8565 68.34C50.8565 68.7933 50.7365 69.2033 50.4965 69.57C50.2832 69.91 49.9365 70.3367 49.4565 70.85L48.2965 72.08ZM55.1919 73V68.09H56.2419V72.09H58.0619V68.09H59.1119V72.09H60.9319V68.09H61.9819V73H55.1919ZM64.502 73V69H62.922V68.09H67.132V69H65.552V73H64.502Z\"*/}\n    {/*  fill=\"#BABDC2\"/>*/}\n    {/*<path*/}\n    {/*  d=\"M44.88 138.896H48.228V140H42.552V139.712L45.372 136.676C45.828 136.196 46.152 135.796 46.344 135.476C46.536 135.156 46.632 134.832 46.632 134.504C46.632 134.096 46.512 133.764 46.272 133.508C46.032 133.244 45.712 133.112 45.312 133.112C44.912 133.112 44.588 133.248 44.34 133.52C44.092 133.792 43.968 134.136 43.968 134.552C43.968 134.696 43.988 134.9 44.028 135.164H42.744C42.688 134.964 42.66 134.736 42.66 134.48C42.66 133.8 42.908 133.208 43.404 132.704C43.9 132.2 44.54 131.948 45.324 131.948C46.076 131.948 46.7 132.184 47.196 132.656C47.7 133.128 47.952 133.712 47.952 134.408C47.952 134.952 47.808 135.444 47.52 135.884C47.264 136.292 46.848 136.804 46.272 137.42L44.88 138.896ZM49.2992 132.08H54.7352V132.428L50.9072 140H49.5272L53.0192 133.22H49.2992V132.08ZM55.3883 135.968C55.3883 134.76 55.6443 133.792 56.1562 133.064C56.6683 132.32 57.4203 131.948 58.4123 131.948C59.4043 131.948 60.1523 132.316 60.6562 133.052C61.1683 133.78 61.4243 134.752 61.4243 135.968C61.4243 137.2 61.1643 138.204 60.6443 138.98C60.1323 139.748 59.3883 140.132 58.4123 140.132C57.4363 140.132 56.6883 139.744 56.1683 138.968C55.6483 138.192 55.3883 137.192 55.3883 135.968ZM60.1043 135.98C60.1043 134.068 59.5403 133.112 58.4123 133.112C57.2763 133.112 56.7083 134.068 56.7083 135.98C56.7083 137.972 57.2763 138.968 58.4123 138.968C59.5403 138.968 60.1043 137.972 60.1043 135.98ZM66.7195 140V138.572H65.7595V137.516H66.7195V136.592H65.7595V135.5H66.7195V132.08H69.5635C70.3075 132.08 70.9075 132.284 71.3635 132.692C71.8195 133.1 72.0475 133.648 72.0475 134.336C72.0475 135.008 71.8155 135.552 71.3515 135.968C70.8955 136.384 70.2995 136.592 69.5635 136.592H67.9915V137.516H71.0995V138.572H67.9915V140H66.7195ZM67.9915 135.5H69.5035C69.8955 135.5 70.2075 135.396 70.4395 135.188C70.6715 134.98 70.7875 134.7 70.7875 134.348C70.7875 133.988 70.6715 133.704 70.4395 133.496C70.2155 133.28 69.9035 133.172 69.5035 133.172H67.9915V135.5Z\"*/}\n    {/*  fill=\"white\"/>*/}\n    <text fill='#455273' fontFamily='Cera Pro' fontWeight='600' fontSize='18px' x=\"40.7829\" y=\"55.6657\"\n          id=\"e1_texte\">{props.capacity} л\n    </text>\n    <text fill='#BABDC2' fontFamily='Cera Pro' fontWeight='600' fontSize='10px' x=\"41.2445\" y=\"73.2472\"\n          id=\"e2_texte\">{props.amount} шт\n    </text>\n    <text fill='#fff' fontFamily='Cera Pro' fontWeight='600' fontSize='12px' x=\"42.1359\" y=\"140.327\"\n          id=\"e3_texte\">{props.price} ₽\n    </text>\n  </svg>\n);\n\nexport default SmallBottles;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"circle\", {\n  cx: 15,\n  cy: 15,\n  r: 15,\n  fill: \"#418DE8\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M16.7933 9.71479C17.0689 10.0012 17.0689 10.4655 16.7933 10.7519L12.7042 15L16.7933 19.2481C17.0689 19.5345 17.0689 19.9988 16.7933 20.2852C16.5176 20.5716 16.0706 20.5716 15.795 20.2852L11.2067 15.5185C10.9311 15.2322 10.9311 14.7678 11.2067 14.4815L15.795 9.71479C16.0706 9.4284 16.5176 9.4284 16.7933 9.71479Z\",\n  fill: \"white\"\n});\n\nvar SvgBack = function SvgBack(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 30,\n    height: 30,\n    viewBox: \"0 0 30 30\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgBack, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/back.e2aae19e.svg\";\nexport { ForwardRef as ReactComponent };","import React, {useContext} from 'react'\nimport {ReactComponent as BackSvg} from \"./back.svg\";\nimport {AppContext} from \"../../../../store/appContext\";\n\nexport const Back = () => {\n  const {deviceType, mobileStep, setMobileStep} = useContext(AppContext)\n\n  const setMobileStepHandler = () => {\n    setMobileStep(mobileStep - 1)\n  }\n\n  if (deviceType === 1) {\n    return (\n      <>\n        <div className='back'>\n          <button\n            className='okButton'\n            onClick={setMobileStepHandler}\n          >\n            <BackSvg/>\n          </button>\n        </div>\n      </>\n    )\n  } else {\n    return null\n  }\n}","import React, {useContext, useState} from 'react'\nimport '../../../../index.css'\nimport './Water.css'\nimport './Counter.css'\nimport BigBottle from './bigBottle.svg.js'\nimport SmallBottles from './smallBottles.svg.js'\nimport {AppContext} from \"../../../../store/appContext\";\nimport {Back} from \"./Back\";\n\nexport const Water = () => {\n  let none = '#D5DDE0'\n  let select = '#FFC369'\n\n  const [choise, setChoise] = useState(0)\n  const {deviceType, setBigBottles, setSmallBottles1, setSmallBottles2, order} = useContext(AppContext)\n\n  const addBottlesHandler = (type) => {\n    if (type === '+') {\n      switch (choise) {\n        case 0 :\n          setBigBottles()\n          break\n        case 1 :\n          setSmallBottles1()\n          break\n        case 2 :\n          setSmallBottles2()\n          break\n        default : break\n      }\n    }\n  }\n\n  const Select = ({amount}) => {\n    return (\n      <div className='select'>\n        <button type='button' className=\"circle minus\" onClick={() => addBottlesHandler('-')}><span/></button>\n        <span className=\"amount\"> {amount} </span>\n        <button type='button' className=\"circle plus\" onClick={() => addBottlesHandler('+')}><span/></button>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <Back/>\n\n      <h3>Вода</h3>\n      <div className='flex' style={deviceType === 1 ? {marginRight: '-8vw'} : {}}>\n        <div className={'flex flex-row-nowrap space-between' + (deviceType === 1 && ' mobile-overscroll')}>\n        <div className='padding-20'>\n          <button\n            type='button'\n            className='waterButton'\n            onClick={() => setChoise(0)}\n          >\n            <BigBottle\n              select={choise === 0 ? select : none}\n              capacity='18,9'\n              amount='1'\n              price='220'\n            />\n          </button>\n          {choise === 0 && <Select amount={order.bigBottles} />}\n        </div>\n        <div className='padding-20'>\n          <button\n            type='button'\n            className='waterButton'\n            onClick={() => setChoise(1)}\n          >\n            <SmallBottles\n              select={choise === 1 ? select : none}\n              capacity='1,5'\n              amount='6'\n              price='175'\n            />\n          </button>\n          {choise === 1 && <Select amount={order.smallBottles1} />}\n        </div>\n        <div className='padding-20'>\n          <button\n            type='button'\n            className='waterButton'\n            onClick={() => setChoise(2)}\n          >\n            <SmallBottles\n              select={choise === 2 ? select : none}\n              capacity='1,5'\n              amount='12'\n              price='270'\n            />\n          </button>\n          {choise === 2 && <Select amount={order.smallBottles2} />}\n        </div>\n      </div>\n      </div>\n    </div>\n  )\n}","import React, {useContext, useState} from 'react'\nimport '../../../../index.css'\nimport './Date.css'\nimport forward from './forward.svg'\nimport back from './back.svg'\nimport {AppContext} from \"../../../../store/appContext\";\nimport moment from \"moment\";\n\n//Buttons with dates component\nexport const DatePicker = () => {\n  const {deviceType} = useContext(AppContext)\n  // const [activeDay, setActiveDay] = useState()\n  let week = ['вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб']\n\n  const initialDates = () => {\n    const today = new Date();\n    const dates = []\n    let j\n    deviceType === 1 ? j = 29 : j = 6\n    for (let i = 0; i < j; i++) {\n      const date = new Date();\n      date.setDate(today.getDate() + i)\n      dates.push(date)\n    }\n    return dates\n  }\n\n  // Shifts\n  const nextDate = (date) => {\n    const m = moment(new Date(date));\n    m.add(1, 'day');\n    return m.toDate()\n  }\n  const prevDate = (date) => {\n    const m = moment(new Date(date));\n    m.subtract(1, 'day');\n    console.log(m.subtract)\n    return m.toDate()\n  }\n\n  const shiftRight = () => {\n    let daysLocal = days.concat([]);\n    daysLocal.shift();\n    const last = daysLocal[daysLocal.length - 1];\n    const date = nextDate(last)\n    daysLocal.push(date);\n    setDays(daysLocal)\n  }\n\n  const shiftLeft = () => {\n    let daysLocal = days.concat([]);\n    const first = days[0];\n    days.pop()\n    const date = prevDate(first);\n    daysLocal = [date].concat(days);\n    setDays(daysLocal)\n  }\n  const [days, setDays] = useState(initialDates)\n\n\n  //Buttons with time component\n  const timeIntervalsWeekday = ['10:00 - 11:00', '12:00 - 13:00', '15:00 - 16:00']\n  const timeIntervalsHoliday = ['12:00 - 13:00', '15:00 - 16:00']\n\n  const Times = () => {\n    let workTimes = []\n    if ((week[order.date.getDay()] === 'вс' || week[order.date.getDay()] === 'сб')) {\n      for (let i = 0; i < timeIntervalsHoliday.length; i++) {\n        workTimes.push(timeIntervalsHoliday[i])\n      }\n    } else {\n      for (let i = 0; i < timeIntervalsWeekday.length; i++) {\n        workTimes.push(timeIntervalsWeekday[i])\n      }\n    }\n    return workTimes;\n  }\n\n  const {order} = useContext(AppContext)\n\n  return (\n    <div>\n      <h3>Дата и время доставки</h3>\n\n      <div className=''>\n\n        <h5>День</h5>\n        <form action=\"\">\n          <div className=\"flex\">\n            <div className={'flex flex-row-nowrap space-between' + (deviceType === 1 && ' mobile-overscroll')}>\n              <div style={deviceType === 1 ? {display: 'none'} : {}}>\n                <button type=\"button\" className='shift' onClick={shiftLeft}>\n                  <img className='image' src={back} alt=\"back\"/>\n                </button>\n              </div>\n              {days.map(date => {\n                return <DayButton\n                  dateFull={date} key={date}\n                  day={week[date.getDay()]}\n                />\n              })}\n              <div style={deviceType === 1 ? {display: 'none'} : {}}>\n                <button type=\"button\" className='shift' onClick={shiftRight}>\n                  <img className='image' src={forward} alt=\"forward\"/>\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n\n\n        <h5>Время</h5>\n        <div className='flex'>\n          <form action=\"\">\n            {Times().map(time => {\n              return <TimeButton\n                time={time} key={time}\n              />\n            })}\n          </form>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nconst DayButton = ({dateFull, day, onClick, isActive}) => {\n  const {setDate, order} = useContext(AppContext)\n\n  const date = dateFull.getDate()\n\n  const SetDateHandler = () => {\n    setDate(dateFull)\n  }\n  return (\n    <div>\n      <button type=\"button\" className='date-btn' onClick={SetDateHandler}\n              style={order.date.getDate() === date ? {backgroundColor: '#FFC369', color: '#fff'} : {}}\n      >\n      <span className='date'\n            style={order.date.getDate() === date ? {color: '#fff'} : {}}\n      >\n        {date}\n      </span>\n        <span className='day'\n              style={(day === 'вс' || day === 'сб') ? {color: '#FD7562'} : {}}\n        >\n        {day}\n      </span>\n      </button>\n    </div>\n  )\n}\n\nconst TimeButton = ({time}) => {\n  const {setTime, order} = useContext(AppContext)\n\n  const SetTimeHandler = () => {\n    setTime(time)\n  }\n\n  return (\n    <button type=\"button\" className='time-btn' onClick={SetTimeHandler}\n            style={order.time === time ? {backgroundColor: '#FFC369', color: '#fff'} : {}}\n    >\n      <span className='date'\n            style={order.time === time ? {color: '#fff'} : {}}\n      >\n        {time}\n      </span>\n    </button>\n  )\n}","import React, {useContext} from 'react'\nimport Promo from \"../Components/Forms/Promo/Promo\";\nimport {AppContext} from \"../store/appContext\";\nimport {Contact} from \"../Components/Forms/Contact/Contact\";\nimport {Bill} from \"../Components/Forms/Select/Bill/Bill\";\nimport {Button} from \"../Components/UI/Button/Button\";\nimport {Water} from \"../Components/Forms/Select/Water/Water\";\nimport {DatePicker} from \"../Components/Forms/Select/Date/Date\";\n\nexport const Order = () => {\n  const {contact, order, agree, deviceType, mobileStep} = useContext(AppContext)\n\n  const dispatchData = () => {\n    console.log(contact, order, agree)\n  }\n\n  if (deviceType) {\n\n    if (mobileStep === 1) {\n      return (\n        <div className='main mobile flex flex-column '>\n          <div className='flex flex-center flex-column justify-center padding flex-grow-1'>\n          <Promo/>\n            <Button\n              text='Заказать воду'\n              class='blue'\n              type='mobileStep'\n            />\n          </div>\n        </div>\n      )\n    }\n    if (mobileStep === 2) {\n      return (\n        <div className='main mobile flex flex-column'>\n          <div className='padding-phone flex space-between flex-column justify-center flex-grow-1'>\n            <div>\n            <h3 style={{marginBottom: '5px'}}>Заполните данные</h3>\n          <Contact/>\n            </div>\n            <div className='container'>\n            <Button\n              text='Далее'\n              class='blue'\n              type='mobileStep'\n            />\n            </div>\n          </div>\n        </div>\n      )\n    }\n    if (mobileStep === 3) {\n      return (\n        <div className='main flex flex-column'>\n          <div className='padding-phone mobile flex space-between flex-column justify-center flex-grow-1'>\n            <div className='select'>\n              <div>\n                <Water/>\n                <div className='rule'/>\n                <DatePicker className='flex-grow-1'/>\n              </div>\n            </div>\n            <div className=\"rule\"/>\n            <div className=''>\n              <Bill/>\n            </div>\n            <div\n              className='container'\n              onClick={dispatchData}\n            >\n              <Button\n                text='Заказать воду'\n                class='blue'\n                type='useHistory'\n                to='/order'\n                useHistory={true}\n              />\n            </div>\n          </div>\n        </div>\n      )\n    }\n  } else {\n    return (\n      <div className='main flex flex-center'>\n\n        <div className='promo'>\n          <Promo/>\n        </div>\n\n        <div className=\"content\">\n\n          <h2 style={{marginBottom: '10px'}}>Заполните данные</h2>\n          <div className='contact'>\n            <Contact/>\n          </div>\n          <div className=\"rule\"/>\n            <div className='select flex flex-row flex-center space-around flex-wrap'>\n              <Water/>\n              <DatePicker/>\n          </div>\n          <div className=\"rule\"/>\n          <div className=''>\n            <Bill/>\n          </div>\n          <div\n            onClick={dispatchData}\n          >\n            <Button\n              text='Заказать воду'\n              class='blue'\n              type='useHistory'\n              to='/order'\n              useHistory={true}\n            />\n          </div>\n\n        </div>\n\n      </div>\n    )\n  }\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"circle\", {\n  cx: 10,\n  cy: 10,\n  r: 10,\n  fill: \"#FFC369\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M9.11859 13C9.05733 12.9998 8.99677 12.9871 8.94066 12.9627C8.88455 12.9384 8.8341 12.9028 8.79245 12.8583L6.6211 10.5689C6.53994 10.4832 6.49646 10.369 6.50023 10.2515C6.504 10.1339 6.55471 10.0227 6.64121 9.94229C6.72771 9.86184 6.84291 9.81874 6.96147 9.82248C7.08003 9.82621 7.19223 9.87648 7.2734 9.96221L9.11413 11.9062L12.8715 7.83222C12.9097 7.78516 12.9571 7.74632 13.0109 7.71809C13.0648 7.68986 13.1238 7.67283 13.1845 7.66805C13.2452 7.66328 13.3063 7.67085 13.3639 7.69032C13.4216 7.70978 13.4746 7.74071 13.5198 7.78123C13.5649 7.82174 13.6012 7.87097 13.6265 7.9259C13.6517 7.98082 13.6654 8.04029 13.6666 8.10063C13.6678 8.16098 13.6566 8.22094 13.6335 8.27682C13.6105 8.33271 13.5762 8.38334 13.5328 8.42561L9.44921 12.8539C9.40795 12.8992 9.35767 12.9356 9.30155 12.9607C9.24542 12.9859 9.18465 12.9992 9.12306 13H9.11859Z\",\n  fill: \"white\"\n});\n\nvar SvgOk = function SvgOk(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgOk, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/ok.694c6e51.svg\";\nexport { ForwardRef as ReactComponent };","import React, {useContext} from 'react'\nimport {AppContext} from \"../../../store/appContext\";\nimport moment from \"moment\";\nimport 'moment/locale/ru'\n\nexport const OrderList = () => {\n  const {order, contact} = useContext(AppContext)\n  moment.locale('ru')\n\n  const items = Items()\n\n  return (\n    <div>\n      {items.map((item, key) =>\n        React.cloneElement(item, {key})\n      )}\n      <p>{moment(order.date).format('D MMMM')}<span>{order.time}</span></p>\n      <div className=\"rule-15\"/>\n      <p>Адрес доставки<span>{contact.address.value}</span></p>\n      <div className=\"rule-15\"/>\n      <p>Телефон<span>{contact.phone.value}</span></p>\n    </div>\n  )\n}\n\nconst Items = () => {\n  const {order} = useContext(AppContext)\n\n  let items = []\n\n    if (order.bigBottles) {\n      items.push(\n        <>\n        <p>Бутыль 18,9 л<span>{order.bigBottles} шт</span></p>\n        <div className=\"rule-15\"/>\n        </>\n      )\n    }\n  if (order.smallBottles1) {\n    items.push(\n      <>\n        <p>Ящик бутылок (6 шт) по 1,5 л<span>{order.smallBottles1} шт</span></p>\n        <div className=\"rule-15\"/>\n      </>\n    )\n  }\n  if (order.smallBottles2) {\n    items.push(\n      <>\n        <p>Ящик бутылок (12 шт) по 1,5 л<span>{order.smallBottles2} шт</span></p>\n        <div className=\"rule-15\"/>\n      </>\n    )\n  }\n\n    return (items)\n}","import React, {useContext} from 'react'\nimport Promo from \"../Components/Forms/Promo/Promo\";\nimport {AppContext} from \"../store/appContext\";\nimport {Bill} from \"../Components/Forms/Select/Bill/Bill\";\nimport {Button} from \"../Components/UI/Button/Button\";\nimport {ReactComponent as OkSvg} from './ok.svg'\nimport {OrderList} from \"../Components/Forms/Order/OrderList\";\n\nexport const OrderFinish = () => {\n  const {deviceType, orderAgain} = useContext(AppContext)\n\n  if (deviceType) {\n    return (\n      <div className='main mobile flex flex-column '>\n        <div className='padding-phone mobile flex space-between flex-column justify-center flex-grow-1'>\n            <h3 style={{lineHeight: '0px'}}><OkSvg className='ok'/><span>Заказ Оформлен</span></h3>\n          <div className='order-mobile'>\n            <OrderList/>\n          </div>\n\n          <Bill/>\n          <div className='container'>\n          <p className='text-order-finish container' style={{width: '60vw'}}>Ваш заказ №221 успешно оформлен. В ближайшее время\n            по указанному телефону с Вами свяжется наш менеджер.</p>\n          </div>\n          <div className='container'>\n            <Button\n              text='Новый заказ'\n              class='blue'\n              to='/'\n              useHistory={true}\n            />\n          </div>\n        </div>\n        </div>\n    )\n  } else {\n    return (\n      <div className='main flex flex-center'>\n\n        <div className='promo'>\n          <Promo/>\n        </div>\n\n        <div className=\"content flex space-between flex-column\">\n          <h2 style={{marginBottom: 0}}><OkSvg className='ok'/><span>Заказ Оформлен</span></h2>\n          <div className='order'>\n            <OrderList/>\n          </div>\n\n          <Bill/>\n          <p className='text-order-finish' style={{color: '#818FB3'}}>Ваш заказ №221 успешно оформлен. В ближайшее время\n            по указанному телефону с Вами свяжется наш менеджер.</p>\n          <div\n               onClick={orderAgain}\n          >\n            <Button\n              style={{marginTop: '30px'}}\n              text='Новый заказ'\n              class='blue'\n              to='/'\n              useHistory={true}\n            />\n          </div>\n\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport './index.css'\nimport {Route, Switch, withRouter} from 'react-router-dom'\nimport {Order} from \"./Pages/Order\";\nimport {OrderFinish} from \"./Pages/OrderFinish\";\n\nconst App = () => {\n\n  let routes = (\n    <Switch>\n      <Route path='/' exact component={Order}/>\n      <Route path='/order' component={OrderFinish}/>\n    </Switch>\n  )\n\n  return (\n    <>\n      {routes}\n    </>\n  )\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  APP_SET_DEVICE,\n  ORDER_AGAIN, SET_AGREE,\n  SET_BIG_BOTTLES, SET_CONTACT,\n  SET_DATE, SET_MOBILE_STEP,\n  SET_SMALL_BOTTLES1, SET_SMALL_BOTTLES2,\n  SET_TIME\n} from \"./types\";\n\nconst handlers = {\n  [APP_SET_DEVICE]: (state, {payload}) => ({...state, deviceType: payload}),\n  [SET_AGREE]: (state, {payload}) => ({...state, agree: !state.agree}),\n  [SET_DATE]: (state, {payload}) => ({...state, order: {...state.order, date: payload} }),\n  [SET_TIME]: (state, {payload}) => ({...state, order: {...state.order, time: payload} }),\n  [SET_MOBILE_STEP]: (state, {payload}) => ({...state, mobileStep: payload }),\n  [SET_CONTACT]: (state, {payload}) => ({...state, contact: payload }),\n  [SET_BIG_BOTTLES]: (state) => ({...state, order: {...state.order, bigBottles: state.order.bigBottles+1} }),\n  [SET_SMALL_BOTTLES1]: (state) => ({...state, order: {...state.order, smallBottles1: state.order.smallBottles1+1} }),\n  [SET_SMALL_BOTTLES2]: (state) => ({...state, order: {...state.order, smallBottles2: state.order.smallBottles2+1} }),\n  [ORDER_AGAIN]: (state, {payload}) => ({...state, ...payload}),\n  DEFAULT: state => state\n}\n\nexport const appReducer = (state, action) => {\n  const handler = handlers[action.type] || handlers.DEFAULT\n  return handler(state, action)\n}","export const APP_SET_DEVICE = 'APP_SET_DEVICE'\nexport const SET_AGREE = 'SET_AGREE'\nexport const ORDER_AGAIN = 'ORDER_AGAIN'\nexport const SET_DATE = 'SET_DATE'\nexport const SET_TIME = 'SET_TIME'\nexport const SET_MOBILE_STEP = 'SET_MOBILE_STEP'\nexport const SET_CONTACT = 'SET_CONTACT'\nexport const SET_BIG_BOTTLES = 'SET_BIG_BOTTLES'\nexport const SET_SMALL_BOTTLES1 = 'SET_SMALL_BOTTLES1'\nexport const SET_SMALL_BOTTLES2 = 'SET_SMALL_BOTTLES2'","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {AppState} from \"./store/appState\";\n\nconst app = (\n  <AppState>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </AppState>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n","import React, {useReducer} from 'react'\nimport {appReducer} from \"./appReducer\";\nimport {\n  APP_SET_DEVICE,\n  ORDER_AGAIN, SET_AGREE,\n  SET_BIG_BOTTLES, SET_CONTACT,\n  SET_DATE, SET_MOBILE_STEP,\n  SET_SMALL_BOTTLES1, SET_SMALL_BOTTLES2,\n  SET_TIME\n} from \"./types\";\nimport {AppContext} from \"./appContext\";\n\nexport const AppState = ({children}) => {\n  const initialState = {\n    deviceType: isMobile(),\n    mobileStep: 1,\n    agree: false,\n    order: {\n      bigBottles: 0,\n      smallBottles1: 0,\n      smallBottles2: 0,\n      date: new Date(),\n      time: ''\n    },\n    contact: {\n      name: {\n        value: '',\n        type: 'text',\n        label: 'Name',\n        errorMessage: 'Введите корректное имя',\n        valid: false,\n        touched: false,\n        validation: {\n          required: true,\n          minLength: 3\n        }\n      },\n      email: {\n        value: '',\n        type: 'email',\n        label: 'Email',\n        errorMessage: 'Введите корректный email',\n        valid: false,\n        touched: false,\n        validation: {\n          required: false,\n          email: true\n        }\n      },\n      phone: {\n        value: '',\n        type: 'phone',\n        label: 'Phone',\n        errorMessage: 'Введите корректный телефон',\n        valid: false,\n        touched: false,\n        validation: {\n          required: true,\n          minLength: 10\n        }\n      },\n      address: {\n        value: '',\n        type: 'text',\n        label: 'Address',\n        errorMessage: 'Введите корректный адрес',\n        valid: false,\n        touched: false,\n        validation: {\n          required: true,\n          minLength: 6\n        }\n      }\n    }\n  }\n\n  // If device have a display < 600x800 pixels - deviceType===1\n  function isMobile() {\n    return +((window.innerWidth < 600) && (window.innerHeight < 800))\n  }\n\n\n  const [state, dispatch] = useReducer(appReducer, initialState)\n\n  const setDevice = (payload) => dispatch({type: APP_SET_DEVICE, payload: payload})\n  const setMobileStep = (payload) => dispatch({type: SET_MOBILE_STEP, payload: payload})\n  const setAgree = (payload) => dispatch({type: SET_AGREE, payload: payload})\n  const setDate = (payload) => dispatch({type: SET_DATE, payload: payload})\n  const setTime = (payload) => dispatch({type: SET_TIME, payload: payload})\n  const setContact = (payload) => dispatch({type: SET_CONTACT, payload: payload})\n  const setBigBottles = () => dispatch({type: SET_BIG_BOTTLES})\n  const setSmallBottles1 = (payload) => dispatch({type: SET_SMALL_BOTTLES1, payload: payload})\n  const setSmallBottles2 = (payload) => dispatch({type: SET_SMALL_BOTTLES2, payload: payload})\n  const orderAgain = (initialState) => dispatch({type: ORDER_AGAIN, payload: initialState})\n\n  const {deviceType, agree, mobileStep, isAuthenticated, order, contact} = state\n\n  return (\n    <AppContext.Provider value={{\n      setDevice, setAgree, setMobileStep, setDate, setTime, orderAgain, setContact, setBigBottles, setSmallBottles1, setSmallBottles2,\n      deviceType, mobileStep, isAuthenticated, order, contact, agree\n    }}>\n      {children}\n    </AppContext.Provider>\n  )\n}"],"sourceRoot":""}